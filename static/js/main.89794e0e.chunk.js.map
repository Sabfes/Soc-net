{"version":3,"sources":["Pages/Users/Users.module.css","Pages/Login/Login.module.css","Pages/Profile/Profile.module.css","Pages/Profile/ProfileInfo/ProfileStatus/ProfileStatus.module.css","Pages/Profile/ProfileInfo/Contacts/Contact.module.css","Pages/News/News.module.css","Pages/Music/Music.module.css","Pages/Settings/Settings.module.css","components/Loader/Loader.module.css","components/Navbar/Navbar.module.css","components/Navbar/Navbar.js","Pages/Profile/myPosts/Post/Post.js","utils/validate/validate.js","components/FormControls/FormControls.js","Pages/Profile/myPosts/PostReduxForm/PostReduxForm.js","Pages/Profile/myPosts/MyPosts.js","Pages/Profile/ProfileInfo/ProfileStatus/ProfileStatus.js","img/avatar-profile.png","Pages/Profile/ProfileInfo/ProfileDataFormRedux/ProfileDataFormRedux.js","Pages/Profile/ProfileInfo/Contacts/Contact.js","Pages/Profile/ProfileInfo/ProfileData/ProfileData.js","Pages/Profile/ProfileInfo/ProfileInfo.js","redux/actions/ActionTypes.js","api/api.js","redux/actions/ProfileActionCreators.js","Pages/Profile/Profile.js","Pages/Dialogs/Message/Message.js","Pages/Dialogs/DialogItem/DialogItem.js","hoc/withAuthRedirect.js","Pages/Dialogs/MsgFormRedux/MsgFormRedux.js","Pages/Dialogs/Dialogs.js","redux/actions/MessagesActionCreators.js","Pages/News/News.js","audio/audio-boyka.mp3","Pages/Music/Music.js","Pages/Settings/Settings.js","Pages/Users/User/UserCard.js","Pages/Users/Paginator/Paginator.js","redux/actions/UsersActionCreators.js","components/Loader/Loader.js","Pages/Users/Users.js","components/Header/Header.js","redux/actions/AuthActionCreators.js","components/Header/HeaderContainer.js","Pages/Login/LoginReduxForm/LoginReduxForm.js","Pages/Login/Login.js","App.js","redux/actions/AppACtionCreator.js","reportWebVitals.js","redux/reducers/ProfileReducer.js","redux/reducers/MessagesReducer.js","redux/reducers/UsersReducer.js","redux/reducers/AuthReducer.js","redux/reducers/AppReducer.js","redux/redux-store.js","index.js","components/FormControls/FormControls.module.css","Pages/Profile/ProfileInfo/ProfileInfo.module.css","Pages/Dialogs/Dialogs.module.css","Pages/Users/User/UserCard.module.css","Pages/Profile/myPosts/Post/Post.module.css","Pages/Dialogs/Message/Message.module.css","Pages/Profile/myPosts/MyPosts.module.css","Pages/Users/Paginator/Paginator.module.css","components/Header/Header.module.css","Pages/Profile/ProfileInfo/ProfileDataFormRedux/ProfileDataFormRedux.module.css","Pages/Dialogs/DialogItem/DialogItem.module.css"],"names":["module","exports","connect","state","userId","auth","props","className","classes","Navbar","Navbar__link","to","activeClassName","Navbar__linkActive","Post","Container","Post__img","src","alt","Post__text","text","requiredField","value","maxLengthCreator","maxLength","length","TextArea","input","meta","hasError","error","touched","formControl","formControl__textArea","errorMessage","Input","formControl__input","createField","placeholder","name","validators","component","Field","validate","NewPostReduxForm","reduxForm","form","onSubmit","handleSubmit","MyPost__textarea","MyPosts","MyPost","onChange","posts","map","post","i","ProfileStatus","useState","editMode","setEditMode","desc","status","setStatus","useEffect","onBlur","updateProfileStatus","autoFocus","e","target","type","onDoubleClick","isOwner","ProfileDataFormRedux","style","color","marginTop","fontSize","MainInfo","MainInfo__job","Object","keys","profileInfo","contacts","item","index","Contact","title","ProfileData","ProfileData__info","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","ProfileData__contacts","ProfileInfo","ProfileInfo__avatarImg","avatarImg","large","defaultAvatar","files","savePhoto","onClick","initialValues","formData","updateProfileInfo","then","ADD_POST","SET_PROFILE_INFO","SET_PROFILE_STATUS","SAVE_PHOTO_SUCCESS","ADD_MESSAGE","FOLLOW_TOGGLE","SET_USERS","CHANGE_CURRENT_PAGE","SET_USERS_TOTAL_COUNT","IS_FETCH_TOGGLE","FOLLOW_FETCHING_TOGGLE","SET_USER_DATA","INITIALIZED_SUCCESS","instance","axios","create","withCredentials","baseURL","headers","userApi","currentPage","pageSize","get","delete","put","data","email","password","rememberMe","photo","FormData","append","setProfileStatus","getProfile","dispatch","a","res","Profile","updateProfile","isAuth","match","params","id","history","push","getProfileStatus","onChangeHandler","addPost","newPostText","this","prevProps","prevState","snapshot","img","React","Component","compose","withRouter","profilePage","newPostTextUpdate","getState","resultCode","stopSubmit","_error","messages","Promise","reject","file","console","log","photos","Message","Message__info","Message__img","Message__text","DialogItem","DialogsItemActive","withAuthRedirect","RedirectComponent","AddMsgFormRedux","Dialogs__textarea","messagesPage","dialogs","addNewMessageActionCreator","message","Dialogs","Dialogs__container","Dialogs__lists","d","Dialogs__messages","m","s","newMsg","News","Music","controls","audioTest","Settings","UserCard","UserCard__left","UserCard__avatar","imgUrl","isFollow","disabled","btnDisabled","some","unFollow","UserCard__button","follow","UserCard__right","Paginator","pageNumber","setPageNumber","leftBorder","rightBorder","pages","filter","k","changePage","selectedPage","Paginator__item","Math","ceil","followToggle","isFetchToggle","bool","followFetchingToggle","requestUsers","users","count","items","totalCount","Loader","ldsEllipsis","Users","changeCurrentPage","pagesCount","totalUsersCount","Users__container","isFetch","u","followed","small","followFetchingId","usersPage","Header","Header__logo","logoutUser","Header__login","setAuthUserData","login","authMe","response","HeaderContainer","LoginReduxForm","LoginUser","msg","Login","Login__content","App","initializeApp","initialized","path","exact","render","app","promise","all","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","ProfileReducer","action","arr","MessagesReducer","msgs","newMessageText","UsersReducer","prevArray","indexOf","isFetching","AuthReducer","AppReducer","rootReducer","combineReducers","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.89794e0e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Users\":\"Users_Users__hfonN\",\"Users__button\":\"Users_Users__button__2DM9m\",\"Users__container\":\"Users_Users__container__2Fj_6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Login\":\"Login_Login__39PGm\",\"Login__content\":\"Login_Login__content__2RYIE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ProfileInfo\":\"Profile_ProfileInfo__1LDap\",\"ProfileInfo__background\":\"Profile_ProfileInfo__background__7RJJs\",\"PostContainer\":\"Profile_PostContainer__1ShUp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ProfileStatus\":\"ProfileStatus_ProfileStatus__1Gp97\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Contact\":\"Contact_Contact__3Su-x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"News\":\"News_News__3Czwo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Music\":\"Music_Music__I-tzv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Settings\":\"Settings_Settings__24Yfv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ldsEllipsis\":\"Loader_ldsEllipsis__36TUh\",\"ldsEllipsis1\":\"Loader_ldsEllipsis1__2OQis\",\"ldsEllipsis2\":\"Loader_ldsEllipsis2__WjScC\",\"ldsEllipsis3\":\"Loader_ldsEllipsis3__3abS4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navbar\":\"Navbar_Navbar__muYHO\",\"Navbar__link\":\"Navbar_Navbar__link__wnKYZ\",\"Navbar__linkActive\":\"Navbar_Navbar__linkActive__6NVmW\"};","import React from 'react'\r\nimport classes from './Navbar.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst Navbar = (props) => {\r\n    return (\r\n        <nav className={classes.Navbar}>\r\n            <NavLink\r\n                className={classes.Navbar__link}\r\n                to={'/profile/' + props.userId}\r\n                activeClassName={classes.Navbar__linkActive}\r\n            >\r\n                Profile\r\n            </NavLink>\r\n\r\n            <NavLink\r\n                className={classes.Navbar__link}\r\n                to={'/dialogs'}\r\n                activeClassName={classes.Navbar__linkActive}\r\n            >\r\n                Messages\r\n            </NavLink>\r\n\r\n            <NavLink\r\n                className={classes.Navbar__link}\r\n                to={'/users'}\r\n                activeClassName={classes.Navbar__linkActive}\r\n            >\r\n                Users\r\n            </NavLink>\r\n\r\n            <NavLink\r\n                className={classes.Navbar__link}\r\n                to={'/news'}\r\n                activeClassName={classes.Navbar__linkActive}\r\n            >\r\n                News\r\n            </NavLink>\r\n\r\n            <NavLink\r\n                className={classes.Navbar__link}\r\n                to={'/music'}\r\n                activeClassName={classes.Navbar__linkActive}\r\n            >\r\n                Music\r\n            </NavLink>\r\n\r\n            <NavLink\r\n                className={classes.Navbar__link}\r\n                to={'/settings'}\r\n                activeClassName={classes.Navbar__linkActive}\r\n            >\r\n                Settings\r\n            </NavLink>\r\n\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userId: state.auth.userId,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Navbar)","import React from 'react'\r\nimport classes from './Post.module.css'\r\n\r\nconst Post = props => {\r\n    return (\r\n        <div className={classes.Container}>\r\n            <div className={classes.Post}>\r\n                <img className={classes.Post__img} src=\"http://cdn.onlinewebfonts.com/svg/img_167183.png\" alt=\"post_img\"/>\r\n                <span className={classes.Post__text} >{props.text}</span>\r\n            </div>\r\n            <span>like</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post","export const requiredField = value => {\r\n    if (value) return undefined\r\n    return 'Field is required'\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => value => {\r\n    if (value && value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n    return undefined\r\n}\r\n","import React from \"react\";\r\nimport classes from './FormControls.module.css'\r\nimport {Field} from \"redux-form\";\r\n\r\nexport const TextArea = ({input, meta, ...props}) => {\r\n    const hasError = meta.error && meta.touched\r\n    return (\r\n        <div className={classes.formControl + ' ' + (hasError ? classes.error : null)}>\r\n            <textarea className={classes.formControl__textArea} {...props} {...input} />\r\n            {\r\n                hasError\r\n                    ? <span className={classes.errorMessage}>{meta.error}</span>\r\n                    : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n    const hasError = meta.error && meta.touched\r\n    return (\r\n        <div className={classes.formControl + ' ' + (hasError ? classes.error : null)}>\r\n            <input className={classes.formControl__input} {...props} {...input} />\r\n            {\r\n                hasError\r\n                    ? <span className={classes.errorMessage}>{meta.error}</span>\r\n                    : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props ={}, text='') => {\r\n    return (\r\n        <div>\r\n            <Field\r\n                placeholder={placeholder}\r\n                name={name}\r\n                validate={validators}\r\n                component={component}\r\n                {...props}\r\n            /> {text}\r\n        </div>\r\n    )\r\n}","import {maxLengthCreator, requiredField} from \"../../../../utils/validate/validate\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport classes from \"../MyPosts.module.css\";\r\nimport {TextArea} from \"../../../../components/FormControls/FormControls\";\r\n\r\nconst maxLength = maxLengthCreator(10)\r\n\r\nconst newPostForm = props => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field\r\n                placeholder={'Post message'}\r\n                className={classes.MyPost__textarea}\r\n                validate={[requiredField, maxLength]}\r\n                component={TextArea}\r\n                name={'newPostText'}\r\n            />\r\n            <button>Add post</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport const NewPostReduxForm = reduxForm({\r\n    form: 'ProfileNewPostForm'\r\n})(newPostForm)","import React from 'react'\r\nimport classes from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport {NewPostReduxForm} from \"./PostReduxForm/PostReduxForm\";\r\n\r\nconst MyPosts = props => {\r\n    return (\r\n        <div className={classes.MyPost}>\r\n            <h1>My posts</h1>\r\n\r\n            <NewPostReduxForm onSubmit={props.onChange}/>\r\n\r\n            {\r\n                props.posts.map( (post, i) => {\r\n                    return <Post key={i} text={post.text}/>\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyPosts","import React, {useEffect, useState} from 'react'\r\nimport classes from './ProfileStatus.module.css'\r\n\r\nexport const ProfileStatus = props => {\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [status, setStatus] = useState(props.desc || 'desc')\r\n\r\n    useEffect(()=>{\r\n        setStatus(props.desc)\r\n    }, [props.desc])\r\n\r\n    const updateProfileStatus = () => {\r\n        setEditMode(false)\r\n        props.updateProfileStatus(status)\r\n    }\r\n    return (\r\n        <div className={classes.ProfileStatus}>\r\n            Status:\r\n            {\r\n                editMode\r\n                    ?   <input\r\n                        onBlur={updateProfileStatus}\r\n                        autoFocus={true}\r\n                        onChange={(e) => {setStatus(e.target.value)}}\r\n                        value={status}\r\n                        type='text'\r\n                    />\r\n                    :   <span onDoubleClick={ () => {\r\n                            if (props.isOwner) {\r\n                                setEditMode(true)\r\n                            }\r\n                        }}>\r\n                            {status}\r\n                        </span>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/avatar-profile.2d4393d1.png\";","import React from \"react\";\r\nimport classes from \"./ProfileDataFormRedux.module.css\";\r\nimport {createField, Input, TextArea} from \"../../../../components/FormControls/FormControls\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {requiredField} from \"../../../../utils/validate/validate\";\r\n\r\nconst ProfileDataForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit(props.onSubmit)}>\r\n             <button type=\"submit\">save</button>\r\n\r\n            {\r\n                props.error\r\n                    ?   <div style={{color: 'red', marginTop: '20px', fontSize: '24px'}}>\r\n                        {props.error}\r\n                    </div>\r\n                    : null\r\n            }\r\n\r\n             <div className={classes.MainInfo}>\r\n                 <div>\r\n                     <p>Full Name:</p>\r\n                     {\r\n                        createField('FullName', 'fullName', [requiredField], Input,)\r\n                    }\r\n                </div>\r\n\r\n                <div className={classes.MainInfo__job}>\r\n                    <p>Looking For a job?</p>\r\n                    {\r\n                        createField('Looking For a job?', 'lookingForAJob', [], Input, {type: 'checkbox'})\r\n                    }\r\n                </div>\r\n                <div>\r\n                    <p>Job Description:</p>\r\n                    {\r\n                        createField('job Description', 'lookingForAJobDescription', [requiredField], TextArea)\r\n                    }\r\n                </div>\r\n                <div>\r\n                    <p>About Me:</p>\r\n                    {\r\n                        createField('AboutMe', 'aboutMe', [requiredField], TextArea)\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n            <div>\r\n                Contacts:\r\n                {\r\n                    Object.keys(props.profileInfo.contacts).map( (item, index) => {\r\n                        return <div key={index}>\r\n                            {createField(item, 'contacts.' + item, [], Input)}\r\n                        </div>\r\n                    })\r\n                }\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport const ProfileDataFormRedux = reduxForm({\r\n    form: 'profileData',\r\n})(ProfileDataForm)\r\n\r\n","import React from 'react'\r\nimport classes from './Contact.module.css'\r\n\r\nconst Contact = (props) => {\r\n    return (\r\n        <div className={classes.Contact}>\r\n            {props.title}:{props.value || '-'}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Contact","import React from \"react\";\r\nimport classes from \"../ProfileInfo.module.css\";\r\nimport Contact from \"../Contacts/Contact\";\r\n\r\nconst ProfileData = ({profileInfo}) => {\r\n    return (\r\n        <div className={classes.ProfileData}>\r\n            {/*Описание профиля*/}\r\n            <div className={classes.ProfileData__info}>\r\n                <div>\r\n                    Fullname: {profileInfo.fullName}\r\n                </div>\r\n                <div>\r\n                    looking For A Job:{profileInfo.lookingForAJob ? 'yes' : 'no'}\r\n                </div>\r\n                {/*Показываем описание поиска работы, если поиск работы === true*/}\r\n                {\r\n                    profileInfo.lookingForAJob\r\n                        ?  <div>\r\n                            looking For A Job Description:{profileInfo.lookingForAJobDescription}\r\n                        </div>\r\n                        : null\r\n                }\r\n                <div>\r\n                    aboutMe: {profileInfo.aboutMe}\r\n                </div>\r\n            </div>\r\n\r\n            <div className={classes.ProfileData__contacts}>\r\n                Contacts:\r\n                {\r\n                    Object.keys(profileInfo.contacts).map( item => {\r\n                        return <Contact key={item} title={item} value={profileInfo.contacts[item]}/>\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileData","import React, {useState} from 'react'\r\nimport classes from './ProfileInfo.module.css'\r\nimport {ProfileStatus} from \"./ProfileStatus/ProfileStatus\"\r\nimport defaultAvatar from '../../../img/avatar-profile.png'\r\nimport {ProfileDataFormRedux} from \"./ProfileDataFormRedux/ProfileDataFormRedux\"\r\nimport ProfileData from \"./ProfileData/ProfileData\"\r\n\r\nconst ProfileInfo = (props) => {\r\n    const [editMode, setEditMode] = useState(false)\r\n\r\n    const onAvatarSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            props.savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    const onSubmitHandler = (formData) => {\r\n        props.updateProfileInfo(formData).then(()=> {\r\n            setEditMode(false)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className={classes.ProfileInfo}>\r\n            {/*Аватар профиля*/}\r\n            <img\r\n                className={classes.ProfileInfo__avatarImg}\r\n                src={props.avatarImg.large || defaultAvatar}\r\n                alt=\"avatar-img\"\r\n            />\r\n            {/*Показываем кнопку загрузки фотографии, если страница - владельца.*/}\r\n            {\r\n                props.isOwner\r\n                    ?   <input type={\"file\"} onChange={onAvatarSelected}/>\r\n                    :   null\r\n            }\r\n            <ProfileStatus isOwner={props.isOwner} updateProfileStatus={props.updateProfileStatus} desc={props.desc} />\r\n\r\n            {/*Показываем кнопку настройки, если страница - владельца.*/}\r\n            {\r\n                props.isOwner && !editMode\r\n                    ? <button onClick={ ()=> {setEditMode(true)} }>edit</button>\r\n                    : null\r\n            }\r\n            {/*Показываем форму настройки если включен editMode*/}\r\n            {\r\n                editMode\r\n                    ? <ProfileDataFormRedux\r\n                        profileInfo={props.profileInfo}\r\n                        initialValues={props.profileInfo}\r\n                        onSubmit={onSubmitHandler}\r\n                    />\r\n                    : <ProfileData\r\n                        profileInfo={props.profileInfo}\r\n                    />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo","// ACTION TYPE\r\n\r\n// PROFILE\r\nexport const NEW_POST_TEXT = 'profile/NEW_POST_TEXT'\r\nexport const ADD_POST = 'profile/ADD_POST'\r\nexport const SET_PROFILE_INFO = 'profile/SET_PROFILE_INFO'\r\nexport const SET_PROFILE_STATUS = 'profile/SET_PROFILE_STATUS'\r\nexport const SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS'\r\n\r\n\r\n// MESSAGES\r\nexport const ADD_MESSAGE = 'message/ADD_MESSAGE'\r\nexport const NEW_MESSAGE_TEXT = 'message/NEW_MESSAGE_TEXT'\r\n\r\n// USERS\r\nexport const FOLLOW_TOGGLE = 'users/FOLLOW_TOGGLE'\r\nexport const SET_USERS = 'users/SET_USERS'\r\nexport const CHANGE_CURRENT_PAGE = 'users/CHANGE_CURRENT_PAGE'\r\nexport const SET_USERS_TOTAL_COUNT = 'users/SET_USERS_TOTAL_COUNT'\r\nexport const IS_FETCH_TOGGLE = 'users/IS_FETCH_TOGGLE'\r\nexport const FOLLOW_FETCHING_TOGGLE = 'users/FOLLOW_FETCHING_TOGGLE'\r\n\r\n//Auth\r\nexport const SET_USER_DATA = 'auth/SET_USER_DATA'\r\nexport const IS_AUTH_TOGGLE = 'auth/IS_AUTH_TOGGLE'\r\n\r\n//APP\r\nexport const INITIALIZED_SUCCESS = 'app/INITIALIZED_SUCCESS'","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"71a0323c-7ff9-4763-8740-70e9a845b5eb\",\r\n    }\r\n})\r\n\r\nexport const userApi = {\r\n    getUsers: (currentPage=1, pageSize=100) => {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n    },\r\n    getProfile: (userId) => {\r\n        return instance.get(`profile/${userId}`)\r\n    },\r\n    getAuth: ()=> {\r\n        return instance.get('auth/me')\r\n    },\r\n    follow: (userId) => {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unFollow: (userId) => {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfileStatus: (userId) => {\r\n        return instance.get(`profile/status/${userId}`)\r\n    },\r\n    updateProfileStatus: (status) => {\r\n        return instance.put(`profile/status`,{status})\r\n    },\r\n    updateProfileInfo: (data) => {\r\n        return instance.put(`profile/`, data)\r\n    },\r\n    login: (email, password, rememberMe = false) => {\r\n        return instance.post(`auth/login`, {email, password, rememberMe})\r\n    },\r\n    logout: () => {\r\n        return instance.delete(`auth/login`)\r\n    },\r\n    savePhoto: (photo) => {\r\n        const formData = new FormData()\r\n        formData.append(\"image\", photo)\r\n\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    }\r\n}","import {ADD_POST, NEW_POST_TEXT, SAVE_PHOTO_SUCCESS, SET_PROFILE_INFO, SET_PROFILE_STATUS} from \"./ActionTypes\";\r\nimport {userApi} from \"../../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\n// ACTION CREATORS\r\n\r\nexport const addPost = (text) => {\r\n    return {\r\n        type: ADD_POST, text\r\n    }\r\n}\r\n\r\nexport const savePhotoSuccess = photo => {\r\n    return {\r\n        type: SAVE_PHOTO_SUCCESS, photo,\r\n    }\r\n}\r\n\r\nexport const newPostTextUpdate = (text) => {\r\n    return {\r\n        type: NEW_POST_TEXT, text\r\n    }\r\n}\r\n\r\nexport const setProfileInfo = (data) => {\r\n    return {\r\n        type: SET_PROFILE_INFO, data\r\n    }\r\n}\r\n\r\nexport const setProfileStatus = status => {\r\n    return {\r\n        type: SET_PROFILE_STATUS, status,\r\n    }\r\n}\r\n\r\n\r\n// THUNK CREATORS\r\n\r\nexport const updateProfileInfo = data => async (dispatch, getState) => {\r\n    const userId = getState().auth.userId\r\n    const res = await userApi.updateProfileInfo(data)\r\n\r\n    if (res.data.resultCode === 0) {\r\n        dispatch(getProfile(userId))\r\n    } else {\r\n        dispatch(stopSubmit('profileData', {_error: res.data.messages[0]}))\r\n        return Promise.reject(res.data.messages[0])\r\n    }\r\n\r\n}\r\n\r\nexport const getProfile = (userId) => async (dispatch) => {\r\n    const res = await userApi.getProfile(userId)\r\n\r\n    dispatch(setProfileInfo(res.data))\r\n}\r\n\r\nexport const getProfileStatus = userId => async (dispatch) => {\r\n    const res = await userApi.getProfileStatus(userId)\r\n\r\n    dispatch(setProfileStatus(res.data))\r\n}\r\n\r\nexport const updateProfileStatus = status => async (dispatch) => {\r\n    const res = await userApi.updateProfileStatus(status)\r\n\r\n    if (res.data.resultCode === 0) {\r\n        dispatch(setProfileStatus(status))\r\n    }\r\n}\r\n\r\nexport const savePhoto = file => async (dispatch) => {\r\n    const res = await userApi.savePhoto(file)\r\n\r\n    if (res.data.resultCode === 0) {\r\n        console.log('res data success')\r\n        dispatch(savePhotoSuccess(res.data.data.photos))\r\n    }\r\n}","import React from 'react'\r\nimport classes from './Profile.module.css'\r\nimport MyPosts from \"./myPosts/MyPosts\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    addPost,\r\n    getProfile,\r\n    getProfileStatus,\r\n    newPostTextUpdate,\r\n    updateProfileStatus,\r\n    savePhoto, updateProfileInfo\r\n} from \"../../redux/actions/ProfileActionCreators\";\r\nimport {Redirect, withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass Profile extends React.Component {\r\n    updateProfile = () => {\r\n        if (!this.props.isAuth) return <Redirect to={'/login'} />\r\n\r\n        let userId = this.props.match.params.id\r\n        if (!userId) {\r\n            userId = this.props.userId;\r\n            if (!userId) {\r\n                this.props.history.push('/login ')\r\n            }\r\n        }\r\n        this.props.getProfile(userId)\r\n        this.props.getProfileStatus(userId)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.id !== prevProps.match.params.id) {\r\n            this.updateProfile()\r\n        }\r\n    }\r\n\r\n    onChangeHandler = (text) => {\r\n        this.props.addPost(text.newPostText)\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.isAuth) return <Redirect to={'/login'} />\r\n        return (\r\n            <main className={classes.ProfileInfo}>\r\n                <ProfileInfo\r\n                    updateProfileInfo={this.props.updateProfileInfo}\r\n                    profileInfo={this.props.profileInfo}\r\n                    isOwner={+this.props.match.params.id === +this.props.userId}\r\n                    updateProfileStatus={this.props.updateProfileStatus}\r\n                    avatarImg={this.props.profileInfo.img}\r\n                    desc={this.props.status}\r\n                    savePhoto={this.props.savePhoto}\r\n                />\r\n                <MyPosts\r\n                    onClick={this.props.addPost}\r\n                    onChange={this.onChangeHandler}\r\n                    posts={this.props.posts}\r\n                />\r\n            </main>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        profileInfo: state.profilePage.profileInfo,\r\n        status: state.profilePage.status,\r\n        isAuth: state.auth.isAuth,\r\n        userId: state.auth.userId,\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {\r\n        newPostTextUpdate,\r\n        addPost,\r\n        getProfile,\r\n        updateProfileInfo,\r\n        updateProfileStatus,\r\n        getProfileStatus,\r\n        savePhoto,\r\n    })\r\n)(Profile)\r\n","import React from 'react'\r\nimport classes from './Message.module.css'\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={classes.Message}>\r\n            <div className={classes.Message__info}>\r\n                <img className={classes.Message__img} src=\"http://cdn.onlinewebfonts.com/svg/download_508630.png\" alt=\"avatar\"/>\r\n                <span>{props.name}</span>\r\n            </div>\r\n            <p className={classes.Message__text}>{props.text}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message","import React from 'react'\r\nimport classes from './DialogItem.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <NavLink\r\n            className={classes.DialogItem}\r\n            to={`/dialogs/${props.id}`}\r\n            activeClassName={classes.DialogsItemActive}\r\n        >\r\n            {props.name}\r\n        </NavLink>\r\n    )\r\n}\r\n\r\nexport default DialogItem","import React from 'react'\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    const mapStateToProps = (state) => ({\r\n        isAuth: state.auth.isAuth,\r\n    })\r\n\r\n\r\n    return connect(mapStateToProps, null)(RedirectComponent)\r\n}\r\n\r\n","import {Field, reduxForm} from \"redux-form\";\r\nimport classes from \"../Dialogs.module.css\";\r\nimport {TextArea} from \"../../../components/FormControls/FormControls\";\r\nimport {maxLengthCreator, requiredField} from \"../../../utils/validate/validate\";\r\n\r\nconst maxLength = maxLengthCreator(50)\r\n\r\nconst addMsgForm = props => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field\r\n                component={TextArea}\r\n                name={'newMsg'}\r\n                placeholder={'text'}\r\n                validate={[requiredField, maxLength]}\r\n                className={classes.Dialogs__textarea}\r\n            >\r\n            </Field>\r\n            <button>Add message</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport const AddMsgFormRedux = reduxForm({\r\n    form: 'dialogAddMessageForm'\r\n})(addMsgForm)","import React from 'react'\r\nimport classes from './Dialogs.module.css'\r\nimport Message from \"./Message/Message\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport {addNewMessageActionCreator} from \"../../redux/actions/MessagesActionCreators\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {AddMsgFormRedux} from \"./MsgFormRedux/MsgFormRedux\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    const addNewMsg = (s) => {\r\n        props.addNewMessageActionCreator(s.newMsg)\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to={'/login'} />\r\n\r\n    return (\r\n        <div className={classes.Dialogs}>\r\n            <h1>Dialogs</h1>\r\n\r\n            <div className={classes.Dialogs__container}>\r\n                {/*Список диалогов*/}\r\n                <div className={classes.Dialogs__lists}>\r\n                    {\r\n                        props.dialogs.map( (d,i)=> {\r\n                            return <DialogItem key={i} name={d.name} id={d.id} />\r\n                        })\r\n                    }\r\n                </div>\r\n\r\n                {/*Сообщения*/}\r\n                <div className={classes.Dialogs__messages}>\r\n\r\n                    {\r\n                        props.messages.map( (m, i) => {\r\n                            return <Message key={i} name={m.name} text={m.text} />\r\n                        })\r\n                    }\r\n\r\n                    <AddMsgFormRedux onSubmit={addNewMsg}/>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        messages: state.messagesPage.messages,\r\n        dialogs: state.messagesPage.dialogs,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        addNewMessageActionCreator: (message) => dispatch(addNewMessageActionCreator(message))\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect,\r\n)(Dialogs)\r\n","import {ADD_MESSAGE} from \"./ActionTypes\";\r\n\r\nexport const addNewMessageActionCreator = (message) => {\r\n    return {\r\n        type: ADD_MESSAGE, message,\r\n    }\r\n}\r\n","import React from 'react'\r\nimport classes from './News.module.css'\r\n\r\nconst News = () => {\r\n    return (\r\n        <div className={classes.News}>\r\n            <h1>News</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News","export default __webpack_public_path__ + \"static/media/audio-boyka.dea5dbfe.mp3\";","import React from 'react'\r\nimport classes from './Music.module.css'\r\nimport audioTest from '../../audio/audio-boyka.mp3'\r\nconst Music = () => {\r\n    const audioPlayHandler = (e) => {\r\n        console.log(e.target)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Music}>\r\n            <h1>Music</h1>\r\n\r\n            <div onClick={audioPlayHandler}>\r\n                <p>Miya Boyko - AUF</p>\r\n                <audio controls>\r\n                    <source src={audioTest} type=\"audio/mpeg\"/>\r\n                </audio>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music","import React from 'react'\r\nimport classes from './Settings.module.css'\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div className={classes.Settings}>\r\n            <h1>Settings</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings","import React from 'react'\r\nimport classes from './UserCard.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport defaultAvatar from '../../../img/avatar-profile.png'\r\n\r\nconst UserCard = props => {\r\n    return (\r\n        <div className={classes.UserCard}>\r\n            <div className={classes.UserCard__left}>\r\n                <NavLink to={'/profile/' + props.id}>\r\n                    <img className={classes.UserCard__avatar} src={ props.imgUrl !== null ? props.imgUrl : defaultAvatar} alt=\"\"/>\r\n                </NavLink>\r\n                {\r\n                    props.isFollow\r\n                        ? <button\r\n                            disabled={props.btnDisabled.some(i => i=== props.id) ? true : false}\r\n                            id={props.id}\r\n                            onClick={() => {props.unFollow(props.id)}}\r\n                            className={classes.UserCard__button}\r\n                        >\r\n                            {\"UNFOLLOW\"}\r\n                        </button>\r\n                        : <button\r\n                            disabled={props.btnDisabled.some(i => i=== props.id) ? true : false}\r\n                            id={props.id}\r\n                            onClick={() => {props.follow(props.id)}}\r\n                            className={classes.UserCard__button}\r\n                        >\r\n                            {\"FOLLOW\"}\r\n                        </button>\r\n                }\r\n            </div>\r\n\r\n            <div className={classes.UserCard__right}>\r\n                <span>{props.name}</span>\r\n                <span>{props.status}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserCard","import React from 'react'\r\nimport classes from './Paginator.module.css'\r\nimport {useState} from 'react'\r\n\r\nconst Paginator = (props) => {\r\n    const pagesQuantity = 10\r\n    const [pageNumber, setPageNumber] = useState(1)\r\n    const leftBorder = (pageNumber - 1 ) * pagesQuantity\r\n    const rightBorder = pageNumber * pagesQuantity\r\n\r\n    const nextPage = () => {\r\n        if (Math.ceil(props.pages.length / pagesQuantity) > pageNumber) {\r\n            setPageNumber(prevState => prevState + 1)\r\n        }\r\n    }\r\n\r\n    const prefPage = () => {\r\n        if (1 < pageNumber) {\r\n            setPageNumber(prevState => prevState - 1)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Paginator}>\r\n            <button onClick={prefPage}>-</button>\r\n            {props.pages\r\n                .filter( (i)=> i >=leftBorder && i <= rightBorder)\r\n                .map( (i, k)=> {\r\n                    return <span\r\n                        key={k}\r\n                        id={i}\r\n                        onClick={props.changePage}\r\n                        className={props.currentPage === i ? classes.selectedPage : classes.Paginator__item}\r\n                    >{i}</span>\r\n            })}\r\n            <button onClick={nextPage}>+</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paginator","import {\r\n    CHANGE_CURRENT_PAGE,\r\n    FOLLOW_FETCHING_TOGGLE,\r\n    FOLLOW_TOGGLE,\r\n    IS_FETCH_TOGGLE,\r\n    SET_USERS,\r\n    SET_USERS_TOTAL_COUNT\r\n} from \"./ActionTypes\";\r\nimport {userApi} from \"../../api/api\";\r\n\r\n\r\n// ACTION CREATORS\r\n\r\nexport const followToggle = (id) => {\r\n    return {\r\n        type: FOLLOW_TOGGLE, id,\r\n    }\r\n}\r\n\r\nexport const setUsers = (users) => {\r\n    return {\r\n        type: SET_USERS, users,\r\n    }\r\n}\r\n\r\nexport const changeCurrentPage = (id) => {\r\n    return {\r\n        type: CHANGE_CURRENT_PAGE, id,\r\n    }\r\n}\r\n\r\nexport const setTotalUsersCount = (count) => {\r\n    return {\r\n        type: SET_USERS_TOTAL_COUNT, count,\r\n    }\r\n}\r\n\r\nexport const isFetchToggle = (bool) => {\r\n    return {\r\n        type: IS_FETCH_TOGGLE, bool,\r\n    }\r\n}\r\n\r\nexport const followFetchingToggle = (id) => {\r\n    return {\r\n        type: FOLLOW_FETCHING_TOGGLE, id\r\n    }\r\n}\r\n\r\n// THUNK CREATORS\r\nexport const requestUsers = (currentPage, pageSize) => (dispatch) => {\r\n    dispatch(isFetchToggle(true))\r\n\r\n    userApi.getUsers(currentPage, pageSize).then(res => {\r\n        dispatch(setUsers(res.data.items))\r\n        dispatch(setTotalUsersCount(res.data.totalCount))\r\n        dispatch(isFetchToggle(false))\r\n    })\r\n}\r\n\r\nexport const follow = (id) => (dispatch) => {\r\n    dispatch(followFetchingToggle(id))\r\n\r\n    userApi.follow(id).then(res => {\r\n        if (res.data.resultCode === 0) {\r\n            dispatch(followToggle(id))\r\n            dispatch(followFetchingToggle(id))\r\n        }\r\n    })\r\n}\r\n\r\nexport const unFollow = (id) => (dispatch) => {\r\n    dispatch(followFetchingToggle(id))\r\n\r\n    userApi.unFollow(id).then(res => {\r\n        if (res.data.resultCode === 0) {\r\n            dispatch(followToggle(id))\r\n            dispatch(followFetchingToggle(id))\r\n        }\r\n    })\r\n}\r\n","import React from 'react'\r\nimport classes from './Loader.module.css'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className={classes.ldsEllipsis}>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader","import React, {Component} from 'react';\r\nimport classes from './Users.module.css'\r\nimport {connect} from \"react-redux\";\r\nimport UserCard from \"./User/UserCard\";\r\nimport Paginator from \"./Paginator/Paginator\"\r\nimport {\r\n    changeCurrentPage, follow, followFetchingToggle,\r\n    followToggle, requestUsers, unFollow,\r\n} from \"../../redux/actions/UsersActionCreators\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\n\r\n\r\nclass Users extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.requestUsers(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    changePage = (e) => {\r\n        this.props.changeCurrentPage(+e.target.id)\r\n        this.props.requestUsers(+e.target.id, this.props.pageSize)\r\n    }\r\n\r\n    render() {\r\n        let pagesCount = Math.ceil(this.props.totalUsersCount / this.props.pageSize);\r\n\r\n        let pages = []\r\n        for (let i=1; i<=pagesCount; i++) {\r\n            pages.push(i)\r\n        }\r\n\r\n        return (\r\n            <div className={classes.Users}>\r\n                <h1>users</h1>\r\n\r\n                <Paginator\r\n                    pages={pages}\r\n                    changePage={this.changePage}\r\n                    currentPage={this.props.currentPage}\r\n                />\r\n\r\n                <div className={classes.Users__container}>\r\n                    {\r\n                        this.props.isFetch ? <Loader /> : null\r\n                    }\r\n                    {\r\n                        this.props.isFetch\r\n                            ? null\r\n                            : this.props.users.map( (u,i)=>{\r\n                                return (<UserCard\r\n                                    key={i}\r\n                                    id={u.id}\r\n                                    name={u.name}\r\n                                    status={u.status}\r\n                                    isFollow={u.followed}\r\n                                    imgUrl={u.photos.small}\r\n                                    btnDisabled={this.props.followFetchingId}\r\n                                    follow={this.props.follow}\r\n                                    unFollow={this.props.unFollow}\r\n                                />)\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetch: state.usersPage.isFetch,\r\n        followFetchingId: state.usersPage.followFetchingId,\r\n    }\r\n}\r\n\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        followToggle: (id) => dispatch(followToggle(id)),\r\n        changeCurrentPage: (id) => dispatch(changeCurrentPage(id)),\r\n        requestUsers: (currentPage, pageSize) => dispatch(requestUsers(currentPage, pageSize)),\r\n        followFetchingToggle: (id) => dispatch(followFetchingToggle(id)),\r\n        follow: (id) => dispatch(follow(id)),\r\n        unFollow: (id) => dispatch(unFollow(id)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withAuthRedirect(Users))\r\n\r\n\r\n\r\n\r\n","import React from \"react\"\r\nimport classes from './Header.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={classes.Header}>\r\n            <span className={classes.Header__logo}>bitaev.SN</span>\r\n\r\n            {\r\n                props.isAuth\r\n                    ? <button onClick={props.logoutUser}>{'logout'}</button>\r\n                    : <div>\r\n                        <NavLink className={classes.Header__login} to={'/login'}>login</NavLink>\r\n                    </div>\r\n            }\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import {SET_USER_DATA} from \"./ActionTypes\";\r\nimport {userApi} from \"../../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => {\r\n    return {\r\n        type: SET_USER_DATA, data: {userId, email, login, isAuth}\r\n    }\r\n}\r\n\r\n// THUNK CREATORS\r\n\r\nexport const authMe = () => async (dispatch) => {\r\n    let response = await userApi.getAuth()\r\n\r\n    if (response.data.resultCode === 0) {\r\n        let {id, login, email} = response.data.data\r\n        dispatch(setAuthUserData(id, email, login, true))\r\n    }\r\n}\r\n\r\nexport const LoginUser = (email, login, rememberMe) => async (dispatch) => {\r\n    let res = await userApi.login(email, login, rememberMe)\r\n\r\n    if (res.data.resultCode === 0) {\r\n        dispatch(authMe())\r\n    } else {\r\n        const msg = res.data.messages.length > 0 ? res.data.messages[0] : 'Some error'\r\n        dispatch(stopSubmit('login', {_error: msg}))\r\n    }\r\n}\r\n\r\nexport const logoutUser = () => async (dispatch) => {\r\n    const res = await userApi.logout()\r\n\r\n    if (res.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false))\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logoutUser, setAuthUserData} from \"../../redux/actions/AuthActionCreators\";\r\n\r\nclass HeaderContainer extends Component {\r\n        render() {\r\n        return (\r\n            <Header {...this.props} />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setAuthUserData: (userId, email, login) => dispatch(setAuthUserData(userId, email, login)),\r\n        logoutUser: () => dispatch(logoutUser())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderContainer)","import {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../../../components/FormControls/FormControls\";\r\nimport {maxLengthCreator, requiredField} from \"../../../utils/validate/validate\";\r\n\r\nconst maxLength = maxLengthCreator(30)\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component={Input} validate={[maxLength, requiredField]} name={'email'} placeholder='login'/>\r\n            <Field component={Input} validate={[maxLength, requiredField]} name={'password'} placeholder='password'/>\r\n            <div>\r\n                <Field component={'input'} name={'rememberMe'} type=\"checkbox\"/>\r\n                <span>remember me</span>\r\n            </div>\r\n            <button>login</button>\r\n            {\r\n                props.error\r\n                    ?   <div style={{color: 'red', marginTop: '20px', fontSize: '24px'}}>\r\n                            {props.error}\r\n                        </div>\r\n                    : null\r\n            }\r\n        </form>\r\n    )\r\n}\r\n\r\nexport const LoginReduxForm = reduxForm({\r\n    form: 'login'\r\n})(LoginForm)","import React from 'react'\r\nimport {LoginReduxForm} from \"./LoginReduxForm/LoginReduxForm\";\r\nimport {connect} from \"react-redux\";\r\nimport {LoginUser} from \"../../redux/actions/AuthActionCreators\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport classes from './Login.module.css'\r\n\r\nconst Login = (props) => {\r\n\r\n    const onSubmit  = (formData) => {\r\n        props.LoginUser(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n\r\n    if (props.isAuth) return <Redirect to={`/profile/${props.userId}`} />\r\n\r\n    return (\r\n        <div className={classes.Login}>\r\n            <div className={classes.Login__content}>\r\n                <h1>Login Page</h1>\r\n\r\n                <LoginReduxForm onSubmit={onSubmit}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        userId: state.auth.userId,\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {\r\n    LoginUser,\r\n})(Login)","import './App.css';\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport Profile from \"./Pages/Profile/Profile\";\r\nimport Dialogs from \"./Pages/Dialogs/Dialogs\";\r\nimport {Switch,withRouter, Route} from \"react-router-dom\";\r\n// import {Redirect} from \"react-router-dom\"\r\nimport News from \"./Pages/News/News\";\r\nimport Music from \"./Pages/Music/Music\";\r\nimport Settings from \"./Pages/Settings/Settings\";\r\nimport Users from \"./Pages/Users/Users\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport Login from \"./Pages/Login/Login\";\r\nimport {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./redux/actions/AppACtionCreator\";\r\nimport Loader from \"./components/Loader/Loader\";\r\n\r\nclass App extends Component {\r\n    componentDidMount() {\r\n        this.props.initializeApp()\r\n    }\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Loader />\r\n        }\r\n\r\n        return (\r\n            <div className=\"App-wrapper\">\r\n                <HeaderContainer/>\r\n                <Navbar/>\r\n\r\n                <Switch>\r\n                    <Route path={'/profile/:id?'} exact={true} render={() => <Profile/>}/>\r\n                    <Route path={'/dialogs'} render={() => <Dialogs/>}/>\r\n                    <Route path={'/users'} render={() => <Users/>}/>\r\n                    <Route path={'/news'} component={News}/>\r\n                    <Route path={'/music'} component={Music}/>\r\n                    <Route path={'/settings'} component={Settings}/>\r\n                    <Route path={'/login'} component={Login}/>\r\n                    <Route path={'/'} render={ ()=> <div> Home Page :3</div> }/>\r\n                    {/*Редирект на профиль.*/}\r\n                    {/*<Route path={'/'} render={ ()=> <Redirect to={'/profile'} /> }/>*/}\r\n                    <Route path={'*'} exact render={ ()=> <div>404 not found</div> } />\r\n                </Switch>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        initialized: state.app.initialized,\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp}),\r\n)(App);\r\n","import {INITIALIZED_SUCCESS} from \"./ActionTypes\";\r\nimport {authMe} from \"./AuthActionCreators\";\r\n\r\nexport const initializedSuccess = () => {\r\n    return {\r\n        type: INITIALIZED_SUCCESS,\r\n    }\r\n}\r\n\r\nexport const initializeApp = () => async (dispatch) => {\r\n    let promise = dispatch(authMe())\r\n\r\n    Promise.all([promise]).then( ()=> {\r\n        dispatch(initializedSuccess())\r\n    })\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {ADD_POST, SAVE_PHOTO_SUCCESS, SET_PROFILE_INFO, SET_PROFILE_STATUS} from \"../actions/ActionTypes\";\r\n\r\nconst initialState = {\r\n    posts: [{id: 1, text: 'id1 text'},{id: 2, text: 'id2 text'}],\r\n    profileInfo: {\r\n        contacts: {},\r\n        img: {\r\n            large: '',\r\n            small: '',\r\n        }\r\n    },\r\n    status: '',\r\n}\r\n\r\nconst ProfileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_PROFILE_STATUS:\r\n            return {\r\n                ...state, status: action.status,\r\n            }\r\n        case ADD_POST:\r\n            const arr = [...state.posts]\r\n            arr.push({id: state.posts.length, text: action.text})\r\n            return {\r\n                ...state, posts: arr,\r\n            }\r\n        case SET_PROFILE_INFO:\r\n            return {\r\n                ...state, profileInfo: {...action.data, img: {...action.data.photos}},\r\n            }\r\n        case SAVE_PHOTO_SUCCESS:\r\n            return {\r\n                ...state, profileInfo: {img: {...action.photo}}\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default ProfileReducer\r\n\r\n","import {ADD_MESSAGE} from \"../actions/ActionTypes\";\r\n\r\nconst initialState = {\r\n    dialogs: [{name: 'Dima', id: 1}, {name: 'Lena', id: 2}, {name: 'Dimasol', id: 3}],\r\n    messages: [\r\n        {name: 'Dima', text: 'test steasd asd;ask asdkjl Asdj '},\r\n        {name: 'Dima', text: 'test steasd asd;ask asdkjl Asdj '},\r\n    ],\r\n}\r\n\r\n\r\nconst MessagesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            const msg = {\r\n                name: 'Dima',\r\n                text: action.message\r\n            }\r\n            const msgs = [...state.messages]\r\n            msgs.push(msg)\r\n            return {\r\n                ...state, messages: msgs ,newMessageText: ''\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default MessagesReducer\r\n\r\n","import {\r\n    CHANGE_CURRENT_PAGE, FOLLOW_FETCHING_TOGGLE,\r\n    FOLLOW_TOGGLE,\r\n    IS_FETCH_TOGGLE,\r\n    SET_USERS,\r\n    SET_USERS_TOTAL_COUNT\r\n} from \"../actions/ActionTypes\";\r\n\r\nconst initialState = {\r\n    users: [],\r\n    pageSize: 100,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetch: false,\r\n    followFetchingId: [],\r\n}\r\n\r\nconst UsersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW_TOGGLE:\r\n            return {\r\n                ...state, users: state.users.map( (item) => {\r\n                    if (+item.id === +action.id) {\r\n                        return {...item, followed: !item.followed}\r\n                    }\r\n                    return item\r\n                })\r\n            }\r\n        case SET_USERS:\r\n            return {\r\n                ...state, users: action.users\r\n            }\r\n        case CHANGE_CURRENT_PAGE:\r\n            return {\r\n                ...state, currentPage: action.id,\r\n            }\r\n        case SET_USERS_TOTAL_COUNT:\r\n            return {\r\n                ...state, totalUsersCount: action.count,\r\n            }\r\n        case IS_FETCH_TOGGLE:\r\n            return {\r\n                ...state, isFetch: action.bool,\r\n            }\r\n        case FOLLOW_FETCHING_TOGGLE:\r\n            const prevArray = state.followFetchingId\r\n            let res\r\n            if (prevArray.indexOf( +action.id ) === -1) {\r\n                res = [...state.followFetchingId, action.id]\r\n            } else {\r\n                res = [...state.followFetchingId.filter( i => i !== action.id)]\r\n            }\r\n            return {\r\n                ...state, followFetchingId: res,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default UsersReducer\r\n\r\n\r\n","import {SET_USER_DATA} from \"../actions/ActionTypes\";\r\n\r\nconst initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isFetching: false,\r\n    isAuth: false,\r\n}\r\n\r\nconst AuthReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state, ...action.data, isAuth: action.data.isAuth,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default AuthReducer\r\n\r\n","import {INITIALIZED_SUCCESS} from \"../actions/ActionTypes\";\r\n\r\nconst initialState = {\r\n    initialized: false,\r\n}\r\n\r\nconst AppReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state, initialized: true,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default AppReducer","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport ProfileReducer from \"./reducers/ProfileReducer\";\r\nimport MessagesReducer from \"./reducers/MessagesReducer\";\r\nimport UsersReducer from \"./reducers/UsersReducer\";\r\nimport AuthReducer from \"./reducers/AuthReducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport AppReducer from \"./reducers/AppReducer\";\r\nimport {reducer as formReducer} from \"redux-form\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    profilePage: ProfileReducer,\r\n    messagesPage: MessagesReducer,\r\n    usersPage: UsersReducer,\r\n    auth: AuthReducer,\r\n    app: AppReducer,\r\n    form: formReducer,\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nexport default store","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport store from './redux/redux-store'\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\n\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <Provider store={store}>\r\n                <App />\r\n        </Provider>\r\n    </BrowserRouter>,\r\n    document.getElementById('root')\r\n);\r\n\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__S3CeG\",\"formControl__input\":\"FormControls_formControl__input__2LcU4\",\"errorMessage\":\"FormControls_errorMessage__GeeYf\",\"formControl__textArea\":\"FormControls_formControl__textArea__2yDSO\",\"error\":\"FormControls_error__2O2Zx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ProfileInfo\":\"ProfileInfo_ProfileInfo__2zfPe\",\"ProfileInfo__description\":\"ProfileInfo_ProfileInfo__description__2LPQC\",\"ProfileInfo__avatarImg\":\"ProfileInfo_ProfileInfo__avatarImg__8DZVv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Dialogs\":\"Dialogs_Dialogs__2Rk1L\",\"Dialogs__container\":\"Dialogs_Dialogs__container__2rMCL\",\"Dialogs__lists\":\"Dialogs_Dialogs__lists__FDg_W\",\"Dialogs__textarea\":\"Dialogs_Dialogs__textarea__eABIB\",\"Dialogs__messages\":\"Dialogs_Dialogs__messages__oekil\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"UserCard\":\"UserCard_UserCard__2zkw9\",\"UserCard__button\":\"UserCard_UserCard__button__YAMUO\",\"UserCard__avatar\":\"UserCard_UserCard__avatar__2IDLJ\",\"UserCard__left\":\"UserCard_UserCard__left__HB3Ce\",\"UserCard__right\":\"UserCard_UserCard__right__2DrKZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Post_Container__2_R1p\",\"Post\":\"Post_Post__1Z0CV\",\"Post__img\":\"Post_Post__img__1vhlJ\",\"Post__text\":\"Post_Post__text__3hiuU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Message\":\"Message_Message__rAqoN\",\"Message__text\":\"Message_Message__text__3N6rx\",\"Message__info\":\"Message_Message__info__39lrt\",\"Message__img\":\"Message_Message__img__cJN8n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MyPost\":\"MyPosts_MyPost__Me6su\",\"MyPost__textarea\":\"MyPosts_MyPost__textarea__i_8Mt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Paginator\":\"Paginator_Paginator__3TWnt\",\"Paginator__item\":\"Paginator_Paginator__item__1cyBC\",\"selectedPage\":\"Paginator_selectedPage__3JmsX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__2ob_1\",\"Header__logo\":\"Header_Header__logo__34yLv\",\"Header__login\":\"Header_Header__login__rhhoE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainInfo\":\"ProfileDataFormRedux_MainInfo__18END\",\"MainInfo__job\":\"ProfileDataFormRedux_MainInfo__job__2HsSy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DialogItem\":\"DialogItem_DialogItem__3fwIe\",\"DialogsItemActive\":\"DialogItem_DialogsItemActive__2wTFT\"};"],"sourceRoot":""}