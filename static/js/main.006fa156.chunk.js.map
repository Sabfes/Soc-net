{"version":3,"sources":["Pages/Profile/ProfileInfo/ProfileDataFormRedux/ProfileDataFormRedux.module.css","Pages/Profile/ProfileInfo/Contacts/Contact.module.css","Pages/Dialogs/DialogItem/DialogItem.module.css","Pages/Users/Users.module.css","components/Loader/Loader.module.css","Pages/Login/Login.module.css","Pages/Profile/Profile.module.css","components/Button/Button.module.css","Pages/News/News.module.css","Pages/Music/Music.module.css","Pages/Settings/Settings.module.css","components/Navbar/Navbar.module.css","api/api.ts","components/Navbar/Navbar.tsx","Pages/Profile/myPosts/Post/Post.js","utils/validate/validate.ts","components/FormControls/FormControls.tsx","Pages/Profile/myPosts/PostReduxForm/PostReduxForm.js","Pages/Profile/myPosts/MyPosts.js","Pages/Profile/ProfileInfo/ProfileStatus/ProfileStatus.tsx","img/avatar-profile.png","components/Button/Button.js","Pages/Profile/ProfileInfo/ProfileDataFormRedux/ProfileDataFormRedux.js","Pages/Profile/ProfileInfo/Contacts/Contact.js","Pages/Profile/ProfileInfo/ProfileData/ProfileData.js","Pages/Profile/ProfileInfo/ProfileInfo.js","redux/actions/ActionTypes.ts","api/profileApi.ts","redux/actions/ProfileActionCreators.ts","Pages/Profile/Profile.js","Pages/Dialogs/Message/Message.js","Pages/Dialogs/DialogItem/DialogItem.js","hoc/withAuthRedirect.js","Pages/Dialogs/MsgFormRedux/MsgFormRedux.js","Pages/Dialogs/Dialogs.tsx","redux/actions/MessagesActionCreators.ts","Pages/News/News.tsx","audio/audio-boyka.mp3","Pages/Music/Music.tsx","Pages/Settings/Settings.tsx","Pages/Users/User/UserCard.tsx","Pages/Users/Paginator/Paginator.tsx","api/usersApi.ts","redux/actions/UsersActionCreators.ts","components/Loader/Loader.tsx","Pages/Users/Users.tsx","components/Header/Header.tsx","api/authApi.ts","redux/actions/AuthActionCreators.ts","components/Header/HeaderContainer.js","Pages/Login/LoginReduxForm.tsx","Pages/Login/Login.tsx","App.js","redux/actions/AppActionCreator.ts","reportWebVitals.js","redux/reducers/ProfileReducer.ts","redux/reducers/MessagesReducer.ts","redux/reducers/UsersReducer.ts","redux/reducers/AuthReducer.ts","redux/reducers/AppReducer.ts","redux/redux-store.ts","index.js","components/FormControls/FormControls.module.css","Pages/Profile/ProfileInfo/ProfileData/ProfileData.module.css","Pages/Dialogs/Dialogs.module.css","Pages/Users/User/UserCard.module.css","Pages/Profile/myPosts/Post/Post.module.css","Pages/Dialogs/Message/Message.module.css","Pages/Profile/myPosts/MyPosts.module.css","Pages/Users/Paginator/Paginator.module.css","components/Header/Header.module.css","Pages/Profile/ProfileInfo/ProfileInfo.module.css","Pages/Profile/ProfileInfo/ProfileStatus/ProfileStatus.module.css"],"names":["module","exports","ResultCodeEnum","connect","state","userId","auth","className","classes","Navbar","Navbar__link","to","activeClassName","Navbar__linkActive","Post","props","Container","Post__img","src","alt","Post__text","text","requiredField","value","maxLengthCreator","maxLength","length","TextArea","input","meta","hasError","error","touched","formControl","formControl__textArea","errorMessage","Input","formControl__input","createField","placeholder","name","validators","component","Field","validate","NewPostReduxForm","reduxForm","form","onSubmit","handleSubmit","MyPost__textarea","MyPosts","MyPost","onChange","posts","map","post","i","ProfileStatus","desc","updateProfileStatus","isOwner","useState","editMode","setEditMode","status","setStatus","useEffect","onBlur","autoFocus","e","target","type","ProfileStatus_status","onDoubleClick","Button","ProfileDataFormRedux","style","color","marginTop","fontSize","MainInfo","MainInfo__job","Object","keys","profileInfo","contacts","item","index","Contact","title","Contact__link","ProfileData","ProfileData__info","ProfileData__inputInfo","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","ProfileData__contacts","ProfileInfo","ProfileInfo__avatarImg","avatarImg","large","defaultAvatar","files","savePhoto","onClick","initialValues","formData","updateProfileInfo","then","ADD_POST","SET_PROFILE_INFO","SET_PROFILE_STATUS","SAVE_PHOTO_SUCCESS","ADD_MESSAGE","FOLLOW_TOGGLE","SET_USERS","CHANGE_CURRENT_PAGE","SET_USERS_TOTAL_COUNT","IS_FETCH_TOGGLE","FOLLOW_FETCHING_TOGGLE","SET_USER_DATA","INITIALIZED_SUCCESS","instance","axios","create","withCredentials","baseURL","headers","profileApi","get","put","data","photo","FormData","append","setProfileStatus","getProfile","dispatch","a","res","Profile","updateProfile","isAuth","match","params","id","history","push","getProfileStatus","onChangeHandler","addPost","newPostText","this","prevProps","prevState","snapshot","img","React","Component","compose","withRouter","profilePage","newPostTextUpdate","getState","resultCode","SUCCESS","console","log","stopSubmit","_error","messages","Promise","reject","file","photos","Message","Message__info","Message__img","Message__text","DialogItem","DialogsItemActive","withAuthRedirect","RedirectComponent","AddMsgFormRedux","Dialogs__textarea","messagesPage","dialogs","addNewMessageActionCreator","message","Dialogs","Dialogs__container","Dialogs__lists","d","Dialogs__messages","m","s","newMsg","News","Music","controls","audioTest","Settings","UserCard","imgUrl","isFollow","btnDisabledIdArray","unFollow","follow","UserCard__left","UserCard__avatar","disabled","some","toString","UserCard__button","UserCard__right","Paginator","currentPage","changePage","pages","pageNumber","setPageNumber","leftBorder","rightBorder","filter","k","selectedPage","Paginator__item","Math","ceil","usersApi","pageSize","delete","followToggle","isFetchToggle","bool","followFetchingToggle","Loader","ldsEllipsis","Users","onChangePage","changeCurrentPage","requestUsers","pagesCount","totalUsersCount","Users__container","isFetch","users","u","followed","small","followFetchingId","usersPage","count","items","totalCount","Header","logoutUser","Header__logo","Header__login","authApi","email","password","rememberMe","setAuthUserData","login","authMe","response","HeaderContainer","LoginReduxForm","LoginUser","msg","Login","Login__content","App","initializeApp","initialized","path","exact","render","app","promise","all","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","ProfileReducer","action","arr","newMessageText","MessagesReducer","msgs","UsersReducer","prevArray","indexOf","isFetching","AuthReducer","AppReducer","rootReducer","combineReducers","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.006fa156.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainInfo\":\"ProfileDataFormRedux_MainInfo__18END\",\"MainInfo__job\":\"ProfileDataFormRedux_MainInfo__job__2HsSy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Contact\":\"Contact_Contact__3Su-x\",\"Contact__link\":\"Contact_Contact__link__3EO4n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DialogItem\":\"DialogItem_DialogItem__3fwIe\",\"DialogsItemActive\":\"DialogItem_DialogsItemActive__2wTFT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Users\":\"Users_Users__hfonN\",\"Users__button\":\"Users_Users__button__2DM9m\",\"Users__container\":\"Users_Users__container__2Fj_6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Loader_Container__2FiGH\",\"ldsEllipsis\":\"Loader_ldsEllipsis__36TUh\",\"ldsEllipsis1\":\"Loader_ldsEllipsis1__2OQis\",\"ldsEllipsis2\":\"Loader_ldsEllipsis2__WjScC\",\"ldsEllipsis3\":\"Loader_ldsEllipsis3__3abS4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Login\":\"Login_Login__39PGm\",\"Login__content\":\"Login_Login__content__2RYIE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ProfileInfo\":\"Profile_ProfileInfo__1LDap\",\"ProfileInfo__background\":\"Profile_ProfileInfo__background__7RJJs\",\"PostContainer\":\"Profile_PostContainer__1ShUp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3BYkD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"News\":\"News_News__3Czwo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Music\":\"Music_Music__I-tzv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Settings\":\"Settings_Settings__24Yfv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navbar\":\"Navbar_Navbar__muYHO\",\"Navbar__link\":\"Navbar_Navbar__link__wnKYZ\",\"Navbar__linkActive\":\"Navbar_Navbar__linkActive__6NVmW\"};","import axios from \"axios\";\r\n\r\nexport const instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"71a0323c-7ff9-4763-8740-70e9a845b5eb\",\r\n    }\r\n})\r\n\r\nexport enum ResultCodeEnum {\r\n    SUCCESS = 0,\r\n    ERROR = 1,\r\n}\r\n\r\nexport const api = {\r\n\r\n\r\n\r\n\r\n\r\n}","import React from 'react'\r\nimport classes from './Navbar.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\n\r\ntype PropsType = {\r\n    userId: number\r\n}\r\n\r\nconst Navbar: React.FC<PropsType> = ({userId}) => {\r\n    return (\r\n        <nav className={classes.Navbar}>\r\n            <NavLink\r\n                className={classes.Navbar__link}\r\n                to={'/profile/' + userId}\r\n                activeClassName={classes.Navbar__linkActive}\r\n            >\r\n                Profile\r\n            </NavLink>\r\n\r\n            <NavLink\r\n                className={classes.Navbar__link}\r\n                to={'/dialogs'}\r\n                activeClassName={classes.Navbar__linkActive}\r\n            >\r\n                Messages\r\n            </NavLink>\r\n\r\n            <NavLink\r\n                className={classes.Navbar__link}\r\n                to={'/users'}\r\n                activeClassName={classes.Navbar__linkActive}\r\n            >\r\n                Users\r\n            </NavLink>\r\n\r\n            <NavLink\r\n                className={classes.Navbar__link}\r\n                to={'/news'}\r\n                activeClassName={classes.Navbar__linkActive}\r\n            >\r\n                News\r\n            </NavLink>\r\n\r\n            <NavLink\r\n                className={classes.Navbar__link}\r\n                to={'/music'}\r\n                activeClassName={classes.Navbar__linkActive}\r\n            >\r\n                Music\r\n            </NavLink>\r\n\r\n            <NavLink\r\n                className={classes.Navbar__link}\r\n                to={'/settings'}\r\n                activeClassName={classes.Navbar__linkActive}\r\n            >\r\n                Settings\r\n            </NavLink>\r\n\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        userId: state.auth.userId,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Navbar)","import React from 'react'\r\nimport classes from './Post.module.css'\r\n\r\nconst Post = props => {\r\n    return (\r\n        <div className={classes.Container}>\r\n            <div className={classes.Post}>\r\n                <img className={classes.Post__img} src=\"http://cdn.onlinewebfonts.com/svg/img_167183.png\" alt=\"post_img\"/>\r\n                <span className={classes.Post__text} >{props.text}</span>\r\n            </div>\r\n            <span>like</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post","export type ValidatorsType = (value: string) => string | undefined\r\n\r\nexport const requiredField: ValidatorsType = (value) => {\r\n    if (value) return undefined\r\n    return 'Field is required'\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength: number): ValidatorsType => (value) => {\r\n    if (value && value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n    return undefined\r\n}\r\n","import React from \"react\";\r\nimport classes from './FormControls.module.css'\r\nimport {Field} from \"redux-form\";\r\nimport {ValidatorsType} from \"../../utils/validate/validate\";\r\n\r\ntype PropsTypes = {\r\n    meta: {\r\n        error: string\r\n        touched: boolean\r\n    }\r\n    input: any\r\n}\r\n\r\nexport const TextArea:  React.FC<PropsTypes> = ({input, meta, ...props}) => {\r\n    const hasError = meta.error && meta.touched\r\n    return (\r\n        <div className={classes.formControl + ' ' + (hasError ? classes.error : null)}>\r\n            <textarea className={classes.formControl__textArea} {...props} {...input} />\r\n            {\r\n                hasError\r\n                    ? <span className={classes.errorMessage}>{meta.error}</span>\r\n                    : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Input: React.FC<PropsTypes> = ({input, meta, ...props}) => {\r\n    const hasError = meta.error && meta.touched\r\n    return (\r\n        <div className={classes.formControl + ' ' + (hasError ? classes.error : null)}>\r\n            <input className={classes.formControl__input} {...props} {...input} />\r\n            {\r\n                hasError\r\n                    ? <span className={classes.errorMessage}>{meta.error}</span>\r\n                    : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const createField = (\r\n    placeholder: string,\r\n    name:string,\r\n    validators: Array<ValidatorsType>,\r\n    component: string | React.Component,\r\n    props ={},\r\n    text: string = ''\r\n) => {\r\n    return (\r\n        <div>\r\n            <Field\r\n                placeholder={placeholder}\r\n                name={name}\r\n                validate={validators}\r\n                component={component}\r\n                {...props}\r\n            /> {text}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n","import {maxLengthCreator, requiredField} from \"../../../../utils/validate/validate\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport classes from \"../MyPosts.module.css\";\r\nimport {TextArea} from \"../../../../components/FormControls/FormControls\";\r\n\r\nconst maxLength = maxLengthCreator(10)\r\n\r\nconst newPostForm = props => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field\r\n                placeholder={'Post message'}\r\n                className={classes.MyPost__textarea}\r\n                validate={[requiredField, maxLength]}\r\n                component={TextArea}\r\n                name={'newPostText'}\r\n            />\r\n            <button>Add post</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport const NewPostReduxForm = reduxForm({\r\n    form: 'ProfileNewPostForm'\r\n})(newPostForm)","import React from 'react'\r\nimport classes from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport {NewPostReduxForm} from \"./PostReduxForm/PostReduxForm\";\r\n\r\nconst MyPosts = props => {\r\n    return (\r\n        <div className={classes.MyPost}>\r\n            <h1>My posts</h1>\r\n\r\n            <NewPostReduxForm onSubmit={props.onChange}/>\r\n\r\n            {\r\n                props.posts.map( (post, i) => {\r\n                    return <Post key={i} text={post.text}/>\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyPosts","import React, {useEffect, useState} from 'react'\r\nimport classes from './ProfileStatus.module.css'\r\n\r\ntype PropsTypes = {\r\n    updateProfileStatus: (status: string) => void\r\n    desc: string\r\n    isOwner: boolean\r\n}\r\n\r\nexport const ProfileStatus: React.FC<PropsTypes> = ({desc, updateProfileStatus, isOwner}) => {\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [status, setStatus] = useState(desc || 'desc')\r\n\r\n    useEffect(()=>{\r\n        setStatus(desc)\r\n    }, [desc])\r\n\r\n    const onChangeProfileStatus = () => {\r\n        setEditMode(false)\r\n        updateProfileStatus(status)\r\n    }\r\n    return (\r\n        <div className={classes.ProfileStatus}>\r\n            Status:\r\n            {\r\n                editMode\r\n                    ?   <input\r\n                        onBlur={onChangeProfileStatus}\r\n                        autoFocus={true}\r\n                        onChange={(e) => {setStatus(e.target.value)}}\r\n                        value={status}\r\n                        type='text'\r\n                    />\r\n                    :   <span className={classes.ProfileStatus_status} onDoubleClick={ () => {\r\n                            if (isOwner) {\r\n                                setEditMode(true)\r\n                            }\r\n                        }}>\r\n                            {status}\r\n                        </span>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/avatar-profile.2d4393d1.png\";","import React from 'react'\r\nimport classes from './Button.module.css'\r\n\r\nconst Button = (props) => {\r\n    return (\r\n        <button {...props} className={classes.Button}>\r\n            {props.value}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button","import React from \"react\";\r\nimport classes from \"./ProfileDataFormRedux.module.css\";\r\nimport {createField, Input, TextArea} from \"../../../../components/FormControls/FormControls\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {requiredField} from \"../../../../utils/validate/validate\";\r\nimport Button from \"../../../../components/Button/Button\";\r\n\r\nconst ProfileDataForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit(props.onSubmit)}>\r\n            <Button\r\n                type=\"submit\"\r\n                value=\"save\"\r\n            />\r\n\r\n            {\r\n                props.error\r\n                    ? <div style={{color: 'red', marginTop: '20px', fontSize: '24px'}}>\r\n                        {props.error}\r\n                    </div>\r\n                    : null\r\n            }\r\n\r\n            <div className={classes.MainInfo}>\r\n                <div>\r\n                    <p>Full Name:</p>\r\n                    {\r\n                        createField('FullName', 'fullName', [requiredField], Input,)\r\n                    }\r\n                </div>\r\n\r\n                <div className={classes.MainInfo__job}>\r\n                    <p>Looking For a job?</p>\r\n                    {\r\n                        createField('Looking For a job?', 'lookingForAJob', [], Input, {type: 'checkbox'})\r\n                    }\r\n                </div>\r\n                <div>\r\n                    <p>Job Description:</p>\r\n                    {\r\n                        createField('job Description', 'lookingForAJobDescription', [requiredField], TextArea)\r\n                    }\r\n                </div>\r\n                <div>\r\n                    <p>About Me:</p>\r\n                    {\r\n                        createField('AboutMe', 'aboutMe', [requiredField], TextArea)\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n            <div>\r\n                Contacts:\r\n                {\r\n                    Object.keys(props.profileInfo.contacts).map((item, index) => {\r\n                        return <div key={index}>\r\n                            {createField(item, 'contacts.' + item, [], Input)}\r\n                        </div>\r\n                    })\r\n                }\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport const ProfileDataFormRedux = reduxForm({\r\n    form: 'profileData',\r\n})(ProfileDataForm)\r\n\r\n","import React from 'react'\r\nimport classes from './Contact.module.css'\r\n\r\nconst Contact = (props) => {\r\n    return (\r\n        <div className={classes.Contact}>\r\n            {props.title}: <span className={classes.Contact__link}>{props.value || '-'}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Contact","import React from \"react\";\r\nimport classes from \"./ProfileData.module.css\";\r\nimport Contact from \"../Contacts/Contact\";\r\n\r\nconst ProfileData = ({profileInfo}) => {\r\n    return (\r\n        <div className={classes.ProfileData}>\r\n            {/*Описание профиля*/}\r\n            <div className={classes.ProfileData__info}>\r\n                <div>\r\n                    Fullname:\r\n                    <span className={classes.ProfileData__inputInfo}>\r\n                        {profileInfo.fullName}\r\n                    </span>\r\n                </div>\r\n                <div>\r\n                    looking For A Job:\r\n                    <span className={classes.ProfileData__inputInfo}>\r\n                        {profileInfo.lookingForAJob ? 'yes' : 'no'}\r\n                    </span>\r\n                </div>\r\n                {/*Показываем описание поиска работы, если поиск работы === true*/}\r\n                {\r\n                    profileInfo.lookingForAJob\r\n                        ? <div>\r\n                            looking For A Job Description:\r\n                            <span className={classes.ProfileData__inputInfo}>\r\n                                {profileInfo.lookingForAJobDescription}\r\n                            </span>\r\n                        </div>\r\n                        : null\r\n                }\r\n                <div>\r\n                    aboutMe: <span className={classes.ProfileData__inputInfo}>{profileInfo.aboutMe}</span>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={classes.ProfileData__contacts}>\r\n                Contacts:\r\n                {\r\n                    Object.keys(profileInfo.contacts).map(item => {\r\n                        return <Contact key={item} title={item} value={profileInfo.contacts[item]}/>\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileData","import React, {useState} from 'react'\r\nimport classes from './ProfileInfo.module.css'\r\nimport {ProfileStatus} from \"./ProfileStatus/ProfileStatus\"\r\nimport defaultAvatar from '../../../img/avatar-profile.png'\r\nimport {ProfileDataFormRedux} from \"./ProfileDataFormRedux/ProfileDataFormRedux\"\r\nimport ProfileData from \"./ProfileData/ProfileData\"\r\nimport Button from \"../../../components/Button/Button\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    const [editMode, setEditMode] = useState(false)\r\n\r\n    const onAvatarSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            props.savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    const onSubmitHandler = (formData) => {\r\n        props.updateProfileInfo(formData).then(()=> {\r\n            setEditMode(false)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className={classes.ProfileInfo}>\r\n            {/*Аватар профиля*/}\r\n            <img\r\n                className={classes.ProfileInfo__avatarImg}\r\n                src={props.avatarImg.large || defaultAvatar}\r\n                alt=\"avatar-img\"\r\n            />\r\n            {/*Показываем кнопку загрузки фотографии, если страница - владельца.*/}\r\n            {\r\n                props.isOwner\r\n                    ?   <input type={\"file\"} onChange={onAvatarSelected}/>\r\n                    :   null\r\n            }\r\n            <ProfileStatus isOwner={props.isOwner} updateProfileStatus={props.updateProfileStatus} desc={props.desc} />\r\n\r\n            {/*Показываем кнопку настройки, если страница - владельца.*/}\r\n            {\r\n                props.isOwner && !editMode\r\n                    ? <Button onClick={ ()=> {setEditMode(true)} }\r\n                        value={'edit'}\r\n                    />\r\n                    : null\r\n            }\r\n            {/*Показываем форму настройки если включен editMode*/}\r\n            {\r\n                editMode\r\n                    ? <ProfileDataFormRedux\r\n                        profileInfo={props.profileInfo}\r\n                        initialValues={props.profileInfo}\r\n                        onSubmit={onSubmitHandler}\r\n                    />\r\n                    : <ProfileData\r\n                        profileInfo={props.profileInfo}\r\n                    />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo","// ACTION TYPE\r\n\r\n// PROFILE\r\nexport const NEW_POST_TEXT = 'profile/NEW_POST_TEXT'\r\nexport const ADD_POST = 'profile/ADD_POST'\r\nexport const SET_PROFILE_INFO = 'profile/SET_PROFILE_INFO'\r\nexport const SET_PROFILE_STATUS = 'profile/SET_PROFILE_STATUS'\r\nexport const SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS'\r\n\r\n\r\n// MESSAGES\r\nexport const ADD_MESSAGE = 'message/ADD_MESSAGE'\r\nexport const NEW_MESSAGE_TEXT = 'message/NEW_MESSAGE_TEXT'\r\n\r\n// USERS\r\nexport const FOLLOW_TOGGLE = 'users/FOLLOW_TOGGLE'\r\nexport const SET_USERS = 'users/SET_USERS'\r\nexport const CHANGE_CURRENT_PAGE = 'users/CHANGE_CURRENT_PAGE'\r\nexport const SET_USERS_TOTAL_COUNT = 'users/SET_USERS_TOTAL_COUNT'\r\nexport const IS_FETCH_TOGGLE = 'users/IS_FETCH_TOGGLE'\r\nexport const FOLLOW_FETCHING_TOGGLE = 'users/FOLLOW_FETCHING_TOGGLE'\r\n\r\n//Auth\r\nexport const SET_USER_DATA = 'auth/SET_USER_DATA'\r\nexport const IS_AUTH_TOGGLE = 'auth/IS_AUTH_TOGGLE'\r\n\r\n//APP\r\nexport const INITIALIZED_SUCCESS = 'app/INITIALIZED_SUCCESS'","import {instance} from \"./api\";\r\n\r\nexport const profileApi = {\r\n    getProfile: (userId: number) => {\r\n        return instance.get(`profile/${userId}`)\r\n    },\r\n    getProfileStatus: (userId: number) => {\r\n        return instance.get(`profile/status/${userId}`)\r\n    },\r\n    updateProfileStatus: (status: string) => {\r\n        return instance.put(`profile/status`,{status})\r\n    },\r\n    updateProfileInfo: (data: any) => {\r\n        return instance.put(`profile/`, data)\r\n    },\r\n    savePhoto: (photo: any) => {\r\n        const formData = new FormData()\r\n        formData.append(\"image\", photo)\r\n\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    }\r\n};","import {ADD_POST, NEW_POST_TEXT, SAVE_PHOTO_SUCCESS, SET_PROFILE_INFO, SET_PROFILE_STATUS} from \"./ActionTypes\";\r\nimport {ResultCodeEnum} from \"../../api/api\";\r\nimport {profileApi} from \"../../api/profileApi\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {AppStateType} from \"../redux-store\";\r\nimport {Dispatch} from \"redux\";\r\nimport {ProfileData} from \"../../types/types\";\r\n\r\nexport type ProfileActionsTypes = AddPostType | SavePhotoSuccessType | NewPostTextUpdateType |\r\n    SetProfileStatusType | NewPostTextUpdateType | SetProfileStatusType | SetProfileInfoType\r\n\r\n// ACTION CREATORS\r\ntype AddPostType = {\r\n    type: typeof ADD_POST\r\n    text: string\r\n}\r\n\r\nexport const addPost = (text: string): AddPostType => {\r\n    return {\r\n        type: ADD_POST, text\r\n    }\r\n}\r\n\r\ntype SavePhotoSuccessType = {\r\n    type: typeof SAVE_PHOTO_SUCCESS\r\n    photo: string\r\n}\r\n\r\nexport const savePhotoSuccess = (photo: string): SavePhotoSuccessType => {\r\n    return {\r\n        type: SAVE_PHOTO_SUCCESS, photo,\r\n    }\r\n}\r\n\r\ntype NewPostTextUpdateType = {\r\n    type: typeof NEW_POST_TEXT\r\n    text: string\r\n}\r\n\r\nexport const newPostTextUpdate = (text:string): NewPostTextUpdateType => {\r\n    return {\r\n        type: NEW_POST_TEXT, text\r\n    }\r\n}\r\n\r\ntype SetProfileInfoType = {\r\n    type: typeof SET_PROFILE_INFO\r\n    data: ProfileData\r\n}\r\n\r\nexport const setProfileInfo = (data: ProfileData): SetProfileInfoType => {\r\n    return {\r\n        type: SET_PROFILE_INFO, data\r\n    }\r\n}\r\n\r\ntype SetProfileStatusType = {\r\n    type: typeof SET_PROFILE_STATUS\r\n    status: string\r\n}\r\n\r\nexport const setProfileStatus = (status: string): SetProfileStatusType => {\r\n    return {\r\n        type: SET_PROFILE_STATUS, status,\r\n    }\r\n}\r\n\r\n// THUNK CREATORS\r\nexport const updateProfileInfo = (data: any) => async (dispatch: any, getState: ()=> AppStateType) => {\r\n    const userId = getState().auth.userId\r\n    const res = await profileApi.updateProfileInfo(data)\r\n\r\n    if (res.data.resultCode === ResultCodeEnum.SUCCESS) {\r\n        if (userId !== null) {\r\n            dispatch(getProfile(userId))\r\n        } else {\r\n            console.log('userId = null')\r\n        }\r\n    } else {\r\n        dispatch(stopSubmit('profileData', {_error: res.data.messages[0]}))\r\n        return Promise.reject(res.data.messages[0])\r\n    }\r\n\r\n}\r\n\r\nexport const getProfile = (userId:number) => async (dispatch: any) => {\r\n    const res = await profileApi.getProfile(userId)\r\n\r\n    dispatch(setProfileInfo(res.data))\r\n}\r\n\r\nexport const getProfileStatus = (userId:number) => async (dispatch: Dispatch<ProfileActionsTypes>) => {\r\n    const res = await profileApi.getProfileStatus(userId)\r\n\r\n    dispatch(setProfileStatus(res.data))\r\n}\r\n\r\nexport const updateProfileStatus = (status:string) => async (dispatch: Dispatch<ProfileActionsTypes>) => {\r\n    const res = await profileApi.updateProfileStatus(status)\r\n\r\n    if (res.data.resultCode === ResultCodeEnum.SUCCESS) {\r\n        dispatch(setProfileStatus(status))\r\n    }\r\n}\r\n\r\nexport const savePhoto = (file: string) => async (dispatch: Dispatch<ProfileActionsTypes>) => {\r\n    const res = await profileApi.savePhoto(file)\r\n\r\n    if (res.data.resultCode === ResultCodeEnum.SUCCESS) {\r\n        console.log('res data success')\r\n        dispatch(savePhotoSuccess(res.data.data.photos))\r\n    }\r\n}","import React from 'react'\r\nimport classes from './Profile.module.css'\r\nimport MyPosts from \"./myPosts/MyPosts\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    addPost,\r\n    getProfile,\r\n    getProfileStatus,\r\n    newPostTextUpdate,\r\n    updateProfileStatus,\r\n    savePhoto, updateProfileInfo\r\n} from \"../../redux/actions/ProfileActionCreators\";\r\nimport {Redirect, withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass Profile extends React.Component {\r\n    updateProfile = () => {\r\n        if (!this.props.isAuth) return <Redirect to={'/login'}/>\r\n\r\n        let userId = this.props.match.params.id\r\n        if (!userId) {\r\n            userId = this.props.userId;\r\n            if (!userId) {\r\n                this.props.history.push('/login ')\r\n            }\r\n        }\r\n        this.props.getProfile(userId)\r\n        this.props.getProfileStatus(userId)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.id !== prevProps.match.params.id) {\r\n            this.updateProfile()\r\n        }\r\n    }\r\n\r\n    onChangeHandler = (text) => {\r\n        this.props.addPost(text.newPostText)\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.isAuth) return <Redirect to={'/login'}/>\r\n        return (\r\n            <main className={classes.ProfileInfo}>\r\n                <ProfileInfo\r\n                    updateProfileInfo={this.props.updateProfileInfo}\r\n                    profileInfo={this.props.profileInfo}\r\n                    isOwner={+this.props.match.params.id === +this.props.userId}\r\n                    updateProfileStatus={this.props.updateProfileStatus}\r\n                    avatarImg={this.props.profileInfo.img}\r\n                    desc={this.props.status}\r\n                    savePhoto={this.props.savePhoto}\r\n                />\r\n                <MyPosts\r\n                    onClick={this.props.addPost}\r\n                    onChange={this.onChangeHandler}\r\n                    posts={this.props.posts}\r\n                />\r\n            </main>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        profileInfo: state.profilePage.profileInfo,\r\n        status: state.profilePage.status,\r\n        isAuth: state.auth.isAuth,\r\n        userId: state.auth.userId,\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {\r\n        newPostTextUpdate,\r\n        addPost,\r\n        getProfile,\r\n        updateProfileInfo,\r\n        updateProfileStatus,\r\n        getProfileStatus,\r\n        savePhoto,\r\n    })\r\n)(Profile)\r\n","import React from 'react'\r\nimport classes from './Message.module.css'\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={classes.Message}>\r\n            <div className={classes.Message__info}>\r\n                <img className={classes.Message__img} src=\"http://cdn.onlinewebfonts.com/svg/download_508630.png\" alt=\"avatar\"/>\r\n                <span>{props.name}</span>\r\n            </div>\r\n            <p className={classes.Message__text}>{props.text}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message","import React from 'react'\r\nimport classes from './DialogItem.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <NavLink\r\n            className={classes.DialogItem}\r\n            to={`/dialogs/${props.id}`}\r\n            activeClassName={classes.DialogsItemActive}\r\n        >\r\n            {props.name}\r\n        </NavLink>\r\n    )\r\n}\r\n\r\nexport default DialogItem","import React from 'react'\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    const mapStateToProps = (state) => ({\r\n        isAuth: state.auth.isAuth,\r\n    })\r\n\r\n\r\n    return connect(mapStateToProps, null)(RedirectComponent)\r\n}\r\n\r\n","import React from 'react'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport classes from \"../Dialogs.module.css\";\r\nimport {TextArea} from \"../../../components/FormControls/FormControls\";\r\nimport {maxLengthCreator, requiredField} from \"../../../utils/validate/validate\";\r\n\r\nconst maxLength = maxLengthCreator(50)\r\n\r\nconst addMsgForm = props => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field\r\n                component={TextArea}\r\n                name={'newMsg'}\r\n                placeholder={'text'}\r\n                validate={[requiredField, maxLength]}\r\n                className={classes.Dialogs__textarea}\r\n            >\r\n            </Field>\r\n            <button>Add message</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport const AddMsgFormRedux = reduxForm({\r\n    form: 'dialogAddMessageForm'\r\n})(addMsgForm)","import React from 'react'\r\nimport classes from './Dialogs.module.css'\r\nimport Message from \"./Message/Message\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport {addNewMessageActionCreator} from \"../../redux/actions/MessagesActionCreators\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {AddMsgFormRedux} from \"./MsgFormRedux/MsgFormRedux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\n\r\ntype DialogType = {\r\n    name: string\r\n    id: number\r\n}\r\n\r\ntype MessagesType = {\r\n    name: string\r\n    text: string\r\n}\r\n\r\ntype PropsTypes = {\r\n    isAuth: boolean\r\n    addNewMessageActionCreator: (newMessage: string) => void\r\n    dialogs: Array<DialogType>\r\n    messages: Array<MessagesType>\r\n}\r\n\r\nconst Dialogs: React.FC<PropsTypes> = ({isAuth, messages,dialogs,addNewMessageActionCreator}) => {\r\n    const addNewMsg = (s: any): void => {\r\n        addNewMessageActionCreator(s.newMsg)\r\n    }\r\n\r\n    if (!isAuth) return <Redirect to={'/login'} />\r\n\r\n    return (\r\n        <div className={classes.Dialogs}>\r\n            <h1>Dialogs</h1>\r\n\r\n            <div className={classes.Dialogs__container}>\r\n                {/*Список диалогов*/}\r\n                <div className={classes.Dialogs__lists}>\r\n                    {\r\n                        dialogs.map( (d,i)=> {\r\n                            return <DialogItem key={i} name={d.name} id={d.id} />\r\n                        })\r\n                    }\r\n                </div>\r\n\r\n                {/*Сообщения*/}\r\n                <div className={classes.Dialogs__messages}>\r\n\r\n                    {\r\n                        messages.map( (m, i) => {\r\n                            return <Message key={i} name={m.name} text={m.text} />\r\n                        })\r\n                    }\r\n\r\n                    <AddMsgFormRedux onSubmit={addNewMsg}/>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nfunction mapStateToProps(state: AppStateType) {\r\n    return {\r\n        messages: state.messagesPage.messages,\r\n        dialogs: state.messagesPage.dialogs,\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {addNewMessageActionCreator}),\r\n    withAuthRedirect,\r\n)(Dialogs)\r\n","import {ADD_MESSAGE} from \"./ActionTypes\";\r\n\r\nexport type MessagesActionsTypes = AddNewMessageActionCreatorType\r\n\r\ntype AddNewMessageActionCreatorType = {\r\n    type: typeof ADD_MESSAGE\r\n    message: string\r\n}\r\n\r\nexport const addNewMessageActionCreator = (message: string): AddNewMessageActionCreatorType => {\r\n    return {\r\n        type: ADD_MESSAGE, message,\r\n    }\r\n}\r\n","import React from 'react'\r\nimport classes from './News.module.css'\r\n\r\nconst News: React.FC = () => {\r\n    return (\r\n        <div className={classes.News}>\r\n            <h1>News</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News","export default __webpack_public_path__ + \"static/media/audio-boyka.dea5dbfe.mp3\";","import React from 'react'\r\nimport classes from './Music.module.css'\r\n// @ts-ignore\r\nimport audioTest from '../../audio/audio-boyka.mp3'\r\n\r\nconst Music: React.FC = () => {\r\n    const audioPlayHandler = (e: any): void => {\r\n        console.log(e.target)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Music}>\r\n            <h1>Music</h1>\r\n\r\n            <div onClick={audioPlayHandler}>\r\n                <p>Miya Boyko - AUF</p>\r\n                <audio controls>\r\n                    <source src={audioTest} type=\"audio/mpeg\"/>\r\n                </audio>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music","import React from 'react'\r\nimport classes from './Settings.module.css'\r\n\r\nconst Settings: React.FC = () => {\r\n    return (\r\n        <div className={classes.Settings}>\r\n            <h1>Settings</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings","import React from 'react'\r\nimport classes from './UserCard.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport defaultAvatar from '../../../img/avatar-profile.png'\r\n\r\ntype PropsTypes = {\r\n    id: number\r\n    imgUrl: string | null\r\n    isFollow: boolean | undefined\r\n    btnDisabledIdArray: Array<number>\r\n    unFollow: (id: number) => void\r\n    follow: (id: number) => void\r\n    name: string\r\n    status: string\r\n}\r\n\r\nconst UserCard: React.FC<PropsTypes> =\r\n    ({\r\n         id,\r\n         imgUrl,\r\n         isFollow,\r\n         btnDisabledIdArray,\r\n         unFollow,\r\n         name,\r\n         status,\r\n         follow\r\n     }) => {\r\n        return (\r\n            <div className={classes.UserCard}>\r\n                <div className={classes.UserCard__left}>\r\n                    <NavLink to={'/profile/' + id}>\r\n                        <img className={classes.UserCard__avatar}\r\n                             src={imgUrl !== null ? imgUrl : defaultAvatar}\r\n                             alt=\"avatar\"\r\n                        />\r\n                    </NavLink>\r\n                    {\r\n                        isFollow\r\n                            ? <button\r\n                                disabled={btnDisabledIdArray.some(i => i === id) ? true : false}\r\n                                id={id.toString()}\r\n                                onClick={() => {\r\n                                    unFollow(id)\r\n                                }}\r\n                                className={classes.UserCard__button}\r\n                            >\r\n                                {\"UNFOLLOW\"}\r\n                            </button>\r\n                            : <button\r\n                                disabled={btnDisabledIdArray.some(i => i === id) ? true : false}\r\n                                id={id.toString()}\r\n                                onClick={() => {\r\n                                    follow(id)\r\n                                }}\r\n                                className={classes.UserCard__button}\r\n                            >\r\n                                {\"FOLLOW\"}\r\n                            </button>\r\n                    }\r\n                </div>\r\n\r\n                <div className={classes.UserCard__right}>\r\n                    <span>{name}</span>\r\n                    <span>{status}</span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\nexport default UserCard","import React from 'react'\r\nimport classes from './Paginator.module.css'\r\nimport {useState} from 'react'\r\n\r\ntype PropsTypes = {\r\n    currentPage: number\r\n    changePage: (e: any) => void\r\n    pages: Array<number>\r\n}\r\n\r\nconst Paginator: React.FC<PropsTypes> = ({currentPage, changePage, pages}) => {\r\n    const pagesQuantity = 10\r\n    const [pageNumber, setPageNumber] = useState(1)\r\n    const leftBorder = (pageNumber - 1 ) * pagesQuantity\r\n    const rightBorder = pageNumber * pagesQuantity\r\n\r\n    const nextPage = () => {\r\n        if (Math.ceil(pages.length / pagesQuantity) > pageNumber) {\r\n            setPageNumber(prevState => prevState + 1)\r\n        }\r\n    }\r\n\r\n    const prefPage = () => {\r\n        if (1 < pageNumber) {\r\n            setPageNumber(prevState => prevState - 1)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Paginator}>\r\n            <button onClick={prefPage}>-</button>\r\n            {pages\r\n                .filter( (i)=> i >=leftBorder && i <= rightBorder)\r\n                .map( (i, k)=> {\r\n                    return <span\r\n                        key={k}\r\n                        id={i.toString()}\r\n                        onClick={changePage}\r\n                        className={currentPage === i ? classes.selectedPage : classes.Paginator__item}\r\n                    >{i}</span>\r\n            })}\r\n            <button onClick={nextPage}>+</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paginator","import {instance} from \"./api\";\r\n\r\nexport const usersApi = {\r\n    getUsers: (currentPage: number = 1, pageSize: number = 100) => {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n    },\r\n    follow: (userId: number) => {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unFollow: (userId: number) => {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n};","import {\r\n    CHANGE_CURRENT_PAGE,\r\n    FOLLOW_FETCHING_TOGGLE,\r\n    FOLLOW_TOGGLE,\r\n    IS_FETCH_TOGGLE,\r\n    SET_USERS,\r\n    SET_USERS_TOTAL_COUNT\r\n} from \"./ActionTypes\";\r\nimport {ResultCodeEnum} from \"../../api/api\";\r\nimport {usersApi} from \"../../api/usersApi\";\r\nimport {UserType} from \"../../types/types\";\r\nimport { Dispatch } from \"redux\";\r\n\r\nexport type UsersActionTypes = FollowFetchingToggleType | SetUsersType | ChangeCurrentPageType |\r\n    SetTotalUsersCountType | IsFetchToggleType | FollowToggleType\r\n\r\n// ACTION CREATORS\r\ntype FollowToggleType = {\r\n    type: typeof FOLLOW_TOGGLE\r\n    id: number\r\n}\r\n\r\nexport const followToggle = (id: number): FollowToggleType => {\r\n    return {\r\n        type: FOLLOW_TOGGLE, id,\r\n    }\r\n}\r\n\r\ntype SetUsersType = {\r\n    type: typeof SET_USERS\r\n    users: Array<UserType>\r\n}\r\n\r\nexport const setUsers = (users: Array<UserType>): SetUsersType => {\r\n    return {\r\n        type: SET_USERS, users,\r\n    }\r\n}\r\n\r\ntype ChangeCurrentPageType = {\r\n    type: typeof CHANGE_CURRENT_PAGE\r\n    id: number\r\n}\r\nexport const changeCurrentPage = (id: number): ChangeCurrentPageType => {\r\n    return {\r\n        type: CHANGE_CURRENT_PAGE, id,\r\n    }\r\n}\r\n\r\ntype SetTotalUsersCountType = {\r\n    type: typeof SET_USERS_TOTAL_COUNT\r\n    count: number\r\n}\r\nexport const setTotalUsersCount = (count: number): SetTotalUsersCountType => {\r\n    return {\r\n        type: SET_USERS_TOTAL_COUNT, count,\r\n    }\r\n}\r\n\r\ntype IsFetchToggleType = {\r\n    type: typeof IS_FETCH_TOGGLE\r\n    bool: boolean\r\n}\r\nexport const isFetchToggle = (bool: boolean): IsFetchToggleType => {\r\n    return {\r\n        type: IS_FETCH_TOGGLE, bool,\r\n    }\r\n}\r\n\r\ntype FollowFetchingToggleType = {\r\n    type: typeof FOLLOW_FETCHING_TOGGLE\r\n    id: number\r\n}\r\nexport const followFetchingToggle = (id: number): FollowFetchingToggleType => {\r\n    return {\r\n        type: FOLLOW_FETCHING_TOGGLE, id\r\n    }\r\n}\r\n\r\n// THUNK CREATORS\r\nexport const requestUsers = (currentPage: number, pageSize: number) => {\r\n    return (dispatch: Dispatch<UsersActionTypes>) => {\r\n        dispatch(isFetchToggle(true))\r\n\r\n        usersApi.getUsers(currentPage, pageSize).then(res => {\r\n            dispatch(setUsers(res.data.items))\r\n            dispatch(setTotalUsersCount(res.data.totalCount))\r\n            dispatch(isFetchToggle(false))\r\n        })\r\n    }\r\n}\r\n\r\nexport const follow = (id: number) => (dispatch: Dispatch<UsersActionTypes>) => {\r\n    dispatch(followFetchingToggle(id))\r\n\r\n    usersApi.follow(id).then(res => {\r\n        if (res.data.resultCode === ResultCodeEnum.SUCCESS) {\r\n            dispatch(followToggle(id))\r\n            dispatch(followFetchingToggle(id))\r\n        }\r\n    })\r\n}\r\n\r\nexport const unFollow = (id: number) => (dispatch: Dispatch<UsersActionTypes>) => {\r\n    dispatch(followFetchingToggle(id))\r\n\r\n    usersApi.unFollow(id).then(res => {\r\n        if (res.data.resultCode === ResultCodeEnum.SUCCESS) {\r\n            dispatch(followToggle(id))\r\n            dispatch(followFetchingToggle(id))\r\n        }\r\n    })\r\n}\r\n","import React from 'react'\r\nimport classes from './Loader.module.css'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className={classes.Container}>\r\n            <div className={classes.ldsEllipsis}>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader","import React from 'react';\r\nimport classes from './Users.module.css'\r\nimport {connect} from \"react-redux\";\r\nimport UserCard from \"./User/UserCard\";\r\nimport Paginator from \"./Paginator/Paginator\"\r\nimport {\r\n    changeCurrentPage, follow, followFetchingToggle,\r\n    requestUsers, unFollow,\r\n} from \"../../redux/actions/UsersActionCreators\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport {UserType} from \"../../types/types\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\n\r\ntype MapStatePropsTypes = {\r\n    currentPage: number\r\n    users: Array<UserType>\r\n    isFetch: boolean\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    followFetchingId: Array<number>\r\n}\r\n\r\ntype MapDispatchPropsTypes = {\r\n    changeCurrentPage: (id: number) => void\r\n    requestUsers: (id: number, pageSize: number) => void\r\n    unFollow: () => void\r\n    follow: () => void\r\n    followFetchingToggle: () => void\r\n}\r\n\r\ntype PropsTypes = MapStatePropsTypes & MapDispatchPropsTypes\r\n\r\nclass Users extends React.Component<PropsTypes> {\r\n    componentDidMount() {\r\n        this.props.requestUsers(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    onChangePage = (e: { target: HTMLInputElement }): void => {\r\n        this.props.changeCurrentPage(+e.target.id)\r\n        this.props.requestUsers(+e.target.id, this.props.pageSize)\r\n    }\r\n\r\n    render() {\r\n        let pagesCount = Math.ceil(this.props.totalUsersCount / this.props.pageSize);\r\n\r\n        let pages = []\r\n        for (let i=1; i<=pagesCount; i++) {\r\n            pages.push(i)\r\n        }\r\n\r\n        return (\r\n            <div className={classes.Users}>\r\n                <h1>users</h1>\r\n\r\n                <Paginator\r\n                    pages={pages}\r\n                    changePage={this.onChangePage}\r\n                    currentPage={this.props.currentPage}\r\n                />\r\n\r\n                <div className={classes.Users__container}>\r\n                    {\r\n                        this.props.isFetch ? <Loader /> : null\r\n                    }\r\n                    {\r\n                        this.props.isFetch\r\n                            ? null\r\n                            : this.props.users.map( (u,i)=>{\r\n                                return (<UserCard\r\n                                    key={i}\r\n                                    id={u.id}\r\n                                    name={u.name}\r\n                                    status={u.status}\r\n                                    isFollow={u.followed}\r\n                                    imgUrl={u.photos.small}\r\n                                    btnDisabledIdArray={this.props.followFetchingId}\r\n                                    follow={this.props.follow}\r\n                                    unFollow={this.props.unFollow}\r\n                                />)\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state: AppStateType): MapStatePropsTypes {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetch: state.usersPage.isFetch,\r\n        followFetchingId: state.usersPage.followFetchingId,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,\r\n    {\r\n        changeCurrentPage,\r\n        requestUsers,\r\n        followFetchingToggle,\r\n        follow,\r\n        unFollow\r\n    }\r\n)(withAuthRedirect(Users))\r\n\r\n\r\n\r\n\r\n","import React from \"react\"\r\nimport classes from './Header.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype PropsTypes = {\r\n    logoutUser: () => void\r\n    isAuth: boolean\r\n}\r\n\r\nconst Header: React.FC<PropsTypes> = ({logoutUser, isAuth}) => {\r\n    return (\r\n        <header className={classes.Header}>\r\n            <span className={classes.Header__logo}>bitaev.SN</span>\r\n\r\n            {\r\n                isAuth\r\n                    ? <button onClick={logoutUser}>{'logout'}</button>\r\n                    : <div>\r\n                        <NavLink className={classes.Header__login} to={'/login'}>login</NavLink>\r\n                    </div>\r\n            }\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import {instance} from \"./api\";\r\n\r\nexport const authApi = {\r\n    login: (email: string, password: string, rememberMe: boolean = false) => {\r\n        return instance.post(`auth/login`, {email, password, rememberMe})\r\n    },\r\n    logout: () => {\r\n        return instance.delete(`auth/login`)\r\n    },\r\n    getAuth: ()=> {\r\n        return instance.get('auth/me')\r\n    },\r\n};","import  {SET_USER_DATA} from \"./ActionTypes\";\r\nimport {ResultCodeEnum} from \"../../api/api\";\r\nimport {authApi} from \"../../api/authApi\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nexport type AuthActionsTypes = SetAuthUserDataActionType\r\n\r\ntype SetAuthUserDataActionDataType = {\r\n    userId: number | null\r\n    email: string | null\r\n    login: string | null\r\n    isAuth: boolean\r\n}\r\n\r\ntype SetAuthUserDataActionType = {\r\n    type: typeof SET_USER_DATA\r\n    data: SetAuthUserDataActionDataType\r\n}\r\n\r\nexport const setAuthUserData = (\r\n    userId: number | null,\r\n    email: string | null,\r\n    login: string | null,\r\n    isAuth: boolean\r\n): SetAuthUserDataActionType => {\r\n    return {\r\n        type: SET_USER_DATA, data: {userId, email, login, isAuth}\r\n    }\r\n}\r\n\r\n// THUNK CREATORS\r\nexport const authMe = () => async (dispatch: Dispatch<AuthActionsTypes>) => {\r\n    let response = await authApi.getAuth()\r\n\r\n    if (response.data.resultCode === ResultCodeEnum.SUCCESS) {\r\n        let {id, login, email} = response.data.data\r\n        dispatch(setAuthUserData(id, email, login, true))\r\n    }\r\n}\r\n\r\nexport const LoginUser = (\r\n    email: string,\r\n    login: string,\r\n    rememberMe: boolean\r\n) => async (dispatch: any) => {\r\n    let res = await authApi.login(email, login, rememberMe)\r\n    console.log('res')\r\n    if (res.data.resultCode === ResultCodeEnum.SUCCESS) {\r\n        console.log('norm')\r\n        dispatch(authMe())\r\n    } else {\r\n        console.log('stop')\r\n        const msg = res.data.messages.length > 0 ? res.data.messages[0] : 'Some error'\r\n        dispatch(stopSubmit('login', {_error: msg}))\r\n    }\r\n}\r\n\r\nexport const logoutUser = () => async (dispatch: Dispatch<AuthActionsTypes>) => {\r\n    const res = await authApi.logout()\r\n\r\n    if (res.data.resultCode === ResultCodeEnum.SUCCESS) {\r\n        dispatch(setAuthUserData(null, null, null, false))\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logoutUser, setAuthUserData} from \"../../redux/actions/AuthActionCreators\";\r\n\r\nclass HeaderContainer extends Component {\r\n        render() {\r\n        return (\r\n            <Header {...this.props} />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {setAuthUserData, logoutUser})(HeaderContainer)","import {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../../components/FormControls/FormControls\";\r\nimport {maxLengthCreator, requiredField} from \"../../utils/validate/validate\";\r\nimport {FC} from \"react\";\r\n\r\nconst maxLength = maxLengthCreator(30)\r\n\r\ntype LoginFormValuesType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n    handleSubmit: () => void\r\n}\r\n\r\nconst LoginForm: FC<InjectedFormProps<LoginFormValuesType>> = ({error, handleSubmit }) => {\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <Field component={Input} validate={[maxLength, requiredField]} name={'email'} placeholder='login'/>\r\n            <Field component={Input} validate={[maxLength, requiredField]} name={'password'} placeholder='password'/>\r\n            <div>\r\n                <Field component={'input'} name={'rememberMe'} type=\"checkbox\"/>\r\n                <span>remember me</span>\r\n            </div>\r\n            <button>login</button>\r\n            {\r\n                error\r\n                    ?   <div style={{color: 'red', marginTop: '20px', fontSize: '24px'}}>\r\n                            {error}\r\n                        </div>\r\n                    : null\r\n            }\r\n        </form>\r\n    )\r\n}\r\n\r\nexport const LoginReduxForm = reduxForm<LoginFormValuesType>({form: 'login'})(LoginForm)","import React, {FC} from 'react'\r\nimport {LoginReduxForm} from \"./LoginReduxForm\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport classes from './Login.module.css'\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {LoginUser} from \"../../redux/actions/AuthActionCreators\";\r\n\r\ntype MapStatePropsType = {\r\n    isAuth: boolean\r\n    userId: number | null\r\n}\r\ntype MapDispatchPropsType = {\r\n    LoginUser: (email: string, login: string, rememberMe: boolean) => void\r\n}\r\n\r\ntype PropsType = MapDispatchPropsType & MapStatePropsType\r\n\r\nconst Login: FC<PropsType> = (props) => {\r\n\r\n    const onSubmit = (formData: any) => {\r\n\r\n        props.LoginUser(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n\r\n    if (props.isAuth) return <Redirect to={`/profile/${props.userId}`} />\r\n\r\n    return (\r\n        <div className={classes.Login}>\r\n            <div className={classes.Login__content}>\r\n                <h1>Login Page</h1>\r\n\r\n                <LoginReduxForm onSubmit={onSubmit}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state: AppStateType): MapStatePropsType {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        userId: state.auth.userId,\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {\r\n    LoginUser,\r\n})(Login)","import './App.css';\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport Profile from \"./Pages/Profile/Profile\";\r\nimport Dialogs from \"./Pages/Dialogs/Dialogs\";\r\nimport {Switch, withRouter, Route} from \"react-router-dom\";\r\n// import {Redirect} from \"react-router-dom\"\r\nimport News from \"./Pages/News/News\";\r\nimport Music from \"./Pages/Music/Music\";\r\nimport Settings from \"./Pages/Settings/Settings\";\r\nimport Users from \"./Pages/Users/Users\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport Login from \"./Pages/Login/Login\";\r\nimport {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./redux/actions/AppActionCreator\";\r\nimport Loader from \"./components/Loader/Loader\";\r\n\r\nclass App extends Component {\r\n    componentDidMount() {\r\n        this.props.initializeApp()\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Loader/>\r\n        }\r\n\r\n        return (\r\n            <div className=\"App-wrapper\">\r\n                <HeaderContainer/>\r\n                <Navbar/>\r\n\r\n                <Switch>\r\n                    <Route path={'/profile/:id?'} exact={true} render={() => <Profile/>}/>\r\n                    <Route path={'/dialogs'} render={() => <Dialogs/>}/>\r\n                    <Route path={'/users'} render={() => <Users/>}/>\r\n                    <Route path={'/news'} component={News}/>\r\n                    <Route path={'/music'} component={Music}/>\r\n                    <Route path={'/settings'} component={Settings}/>\r\n                    <Route path={'/login'} component={Login}/>\r\n                    <Route path={'/'} render={() => <div> Home Page :3</div>}/>\r\n                    {/*Редирект на профиль.*/}\r\n                    {/*<Route path={'/'} render={ ()=> <Redirect to={'/profile'} /> }/>*/}\r\n                    <Route path={'*'} exact render={() => <div>404 not found</div>}/>\r\n                </Switch>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        initialized: state.app.initialized,\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp}),\r\n)(App);\r\n","import {INITIALIZED_SUCCESS} from \"./ActionTypes\";\r\nimport {authMe} from \"./AuthActionCreators\";\r\n\r\nexport type AppActionsTypes = initializedSuccessActionType\r\n\r\ntype initializedSuccessActionType = {\r\n    type: typeof INITIALIZED_SUCCESS\r\n}\r\n\r\nexport const initializedSuccess = (): initializedSuccessActionType => {\r\n    return {\r\n        type: INITIALIZED_SUCCESS,\r\n    }\r\n}\r\n\r\n// THUNK\r\nexport const initializeApp = () => async (dispatch: any) => {\r\n    let promise = dispatch(authMe())\r\n\r\n    Promise.all([promise]).then( ()=> {\r\n        dispatch(initializedSuccess())\r\n    })\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {ADD_POST, SAVE_PHOTO_SUCCESS, SET_PROFILE_INFO, SET_PROFILE_STATUS} from \"../actions/ActionTypes\";\r\nimport {ProfileActionsTypes} from \"../actions/ProfileActionCreators\";\r\n\r\ntype InitialStatePostType = {\r\n    id: number\r\n    text: string\r\n}\r\ntype InitialStateType = {\r\n    posts: Array<InitialStatePostType>,\r\n    profileInfo: {\r\n        contacts: {},\r\n        img: {\r\n            large: string,\r\n            small: string,\r\n        }\r\n    },\r\n    status: string,\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    posts: [{id: 1, text: 'id1 text'},{id: 2, text: 'id2 text'}],\r\n    profileInfo: {\r\n        contacts: {},\r\n        img: {\r\n            large: '',\r\n            small: '',\r\n        }\r\n    },\r\n    status: '',\r\n}\r\n\r\nconst ProfileReducer = (state = initialState, action: ProfileActionsTypes) => {\r\n    switch (action.type) {\r\n        case SET_PROFILE_STATUS:\r\n            return {\r\n                ...state, status: action.status,\r\n            }\r\n        case ADD_POST:\r\n            const arr = [...state.posts]\r\n            arr.push({id: state.posts.length, text: action.text})\r\n            return {\r\n                ...state, posts: arr,\r\n            }\r\n        case SET_PROFILE_INFO:\r\n            return {\r\n                ...state, profileInfo: {...action.data, img: {...action.data.photos}},\r\n            }\r\n        case SAVE_PHOTO_SUCCESS:\r\n            return {\r\n                ...state, profileInfo: {...state.profileInfo, img: action.photo}\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default ProfileReducer\r\n\r\n","import {ADD_MESSAGE} from \"../actions/ActionTypes\";\r\nimport {MessagesActionsTypes} from \"../actions/MessagesActionCreators\";\r\n\r\ntype InitialStateDialogsType = {\r\n    name: string\r\n    id: number\r\n}\r\ntype InitialStateMessagesType = {\r\n    name: string\r\n    text: string\r\n}\r\ntype InitialStateType = {\r\n    dialogs: Array<InitialStateDialogsType>\r\n    messages: Array<InitialStateMessagesType>\r\n    newMessageText: string\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    dialogs: [{name: 'Dima', id: 1}, {name: 'Lena', id: 2}, {name: 'Dimasol', id: 3}],\r\n    messages: [\r\n        {name: 'Dima', text: 'test steasd asd;ask asdkjl Asdj '},\r\n        {name: 'Dima', text: 'test steasd asd;ask asdkjl Asdj '},\r\n    ],\r\n    newMessageText: '',\r\n}\r\n\r\n\r\nconst MessagesReducer = (state = initialState, action: MessagesActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            const msg = {\r\n                name: 'Dima',\r\n                text: action.message\r\n            }\r\n            const msgs = [...state.messages]\r\n            msgs.push(msg)\r\n            return {\r\n                ...state, messages: msgs , newMessageText: ''\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default MessagesReducer\r\n","import {\r\n    CHANGE_CURRENT_PAGE, FOLLOW_FETCHING_TOGGLE,\r\n    FOLLOW_TOGGLE,\r\n    IS_FETCH_TOGGLE,\r\n    SET_USERS,\r\n    SET_USERS_TOTAL_COUNT\r\n} from \"../actions/ActionTypes\";\r\nimport {UserType} from \"../../types/types\";\r\nimport {UsersActionTypes} from \"../actions/UsersActionCreators\";\r\n\r\n\r\ntype InitialStateType = {\r\n    users: Array<UserType>,\r\n    pageSize: number,\r\n    totalUsersCount: number,\r\n    currentPage: number,\r\n    isFetch: boolean,\r\n    followFetchingId: Array<number>,\r\n}\r\nconst initialState: InitialStateType = {\r\n    users: [],\r\n    pageSize: 100,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetch: false,\r\n    followFetchingId: [],\r\n}\r\n\r\nconst UsersReducer = (state = initialState, action: UsersActionTypes) => {\r\n    switch (action.type) {\r\n        case FOLLOW_TOGGLE:\r\n            return {\r\n                ...state, users: state.users.map( (item: any) => {\r\n                    if (+item.id === +action.id) {\r\n                        return {...item, followed: !item.followed}\r\n                    }\r\n                    return item\r\n                })\r\n            }\r\n        case SET_USERS:\r\n            return {\r\n                ...state, users: action.users\r\n            }\r\n        case CHANGE_CURRENT_PAGE:\r\n            return {\r\n                ...state, currentPage: action.id,\r\n            }\r\n        case SET_USERS_TOTAL_COUNT:\r\n            return {\r\n                ...state, totalUsersCount: action.count,\r\n            }\r\n        case IS_FETCH_TOGGLE:\r\n            return {\r\n                ...state, isFetch: action.bool,\r\n            }\r\n        case FOLLOW_FETCHING_TOGGLE:\r\n            const prevArray = state.followFetchingId\r\n            let res\r\n            if (prevArray.indexOf( action.id ) === -1) {\r\n                res = [...state.followFetchingId, action.id]\r\n            } else {\r\n                res = [...state.followFetchingId.filter( i => i !== action.id)]\r\n            }\r\n            return {\r\n                ...state, followFetchingId: res,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default UsersReducer\r\n\r\n\r\n","import {SET_USER_DATA} from \"../actions/ActionTypes\";\r\nimport {AuthActionsTypes} from \"../actions/AuthActionCreators\";\r\n\r\nexport type initialStateType = {\r\n    userId: number | null,\r\n    email: string | null,\r\n    login: string | null,\r\n    isFetching: boolean,\r\n    isAuth: boolean,\r\n}\r\n\r\nconst initialState: initialStateType = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isFetching: false,\r\n    isAuth: false,\r\n}\r\n\r\nconst AuthReducer = (state = initialState, action: AuthActionsTypes): initialStateType => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state, ...action.data, isAuth: action.data.isAuth,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default AuthReducer\r\n\r\n","import {INITIALIZED_SUCCESS} from \"../actions/ActionTypes\";\r\nimport {AppActionsTypes} from \"../actions/AppActionCreator\";\r\n\r\nexport type initialStateType = {\r\n    initialized: boolean\r\n}\r\n\r\nconst initialState: initialStateType = {\r\n    initialized: false,\r\n}\r\n\r\nconst AppReducer = (state = initialState, action: AppActionsTypes): initialStateType => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state, initialized: true,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default AppReducer","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport ProfileReducer from \"./reducers/ProfileReducer\";\r\nimport MessagesReducer from \"./reducers/MessagesReducer\";\r\nimport UsersReducer from \"./reducers/UsersReducer\";\r\nimport AuthReducer from \"./reducers/AuthReducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport AppReducer from \"./reducers/AppReducer\";\r\nimport {reducer as formReducer} from \"redux-form\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    profilePage: ProfileReducer,\r\n    messagesPage: MessagesReducer,\r\n    usersPage: UsersReducer,\r\n    auth: AuthReducer,\r\n    app: AppReducer,\r\n    form: formReducer,\r\n})\r\n\r\ntype RootReducerType = typeof rootReducer\r\nexport type AppStateType = ReturnType<RootReducerType>\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nexport default store","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport store from './redux/redux-store'\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\n\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <Provider store={store}>\r\n                <App />\r\n        </Provider>\r\n    </BrowserRouter>,\r\n    document.getElementById('root')\r\n);\r\n\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__S3CeG\",\"formControl__input\":\"FormControls_formControl__input__2LcU4\",\"errorMessage\":\"FormControls_errorMessage__GeeYf\",\"formControl__textArea\":\"FormControls_formControl__textArea__2yDSO\",\"error\":\"FormControls_error__2O2Zx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ProfileData\":\"ProfileData_ProfileData__2cKW2\",\"ProfileData__inputInfo\":\"ProfileData_ProfileData__inputInfo__AyyMs\",\"ProfileData__info\":\"ProfileData_ProfileData__info__1-cLZ\",\"ProfileData__contacts\":\"ProfileData_ProfileData__contacts__zu5XF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Dialogs\":\"Dialogs_Dialogs__2Rk1L\",\"Dialogs__container\":\"Dialogs_Dialogs__container__2rMCL\",\"Dialogs__lists\":\"Dialogs_Dialogs__lists__FDg_W\",\"Dialogs__textarea\":\"Dialogs_Dialogs__textarea__eABIB\",\"Dialogs__messages\":\"Dialogs_Dialogs__messages__oekil\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"UserCard\":\"UserCard_UserCard__2zkw9\",\"UserCard__button\":\"UserCard_UserCard__button__YAMUO\",\"UserCard__avatar\":\"UserCard_UserCard__avatar__2IDLJ\",\"UserCard__left\":\"UserCard_UserCard__left__HB3Ce\",\"UserCard__right\":\"UserCard_UserCard__right__2DrKZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Post_Container__2_R1p\",\"Post\":\"Post_Post__1Z0CV\",\"Post__img\":\"Post_Post__img__1vhlJ\",\"Post__text\":\"Post_Post__text__3hiuU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Message\":\"Message_Message__rAqoN\",\"Message__text\":\"Message_Message__text__3N6rx\",\"Message__info\":\"Message_Message__info__39lrt\",\"Message__img\":\"Message_Message__img__cJN8n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MyPost\":\"MyPosts_MyPost__Me6su\",\"MyPost__textarea\":\"MyPosts_MyPost__textarea__i_8Mt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Paginator\":\"Paginator_Paginator__3TWnt\",\"Paginator__item\":\"Paginator_Paginator__item__1cyBC\",\"selectedPage\":\"Paginator_selectedPage__3JmsX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__2ob_1\",\"Header__logo\":\"Header_Header__logo__34yLv\",\"Header__login\":\"Header_Header__login__rhhoE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ProfileInfo\":\"ProfileInfo_ProfileInfo__2zfPe\",\"ProfileInfo__description\":\"ProfileInfo_ProfileInfo__description__2LPQC\",\"ProfileInfo__avatarImg\":\"ProfileInfo_ProfileInfo__avatarImg__8DZVv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ProfileStatus\":\"ProfileStatus_ProfileStatus__1Gp97\",\"ProfileStatus_status\":\"ProfileStatus_ProfileStatus_status__3t1-3\"};"],"sourceRoot":""}